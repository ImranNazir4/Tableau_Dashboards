<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='COVID Vaccine Coverage' inline='true' name='federated.0f9m3da1ntzgq619ytt880y0izf4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID Vaccine Coverage' name='textscan.0mkvlvp0tqlj1q13b4aaj1awdq21'>
            <connection class='textscan' directory='I:/download' filename='COVID Vaccine Coverage.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0mkvlvp0tqlj1q13b4aaj1awdq21' name='COVID Vaccine Coverage.csv' table='[COVID Vaccine Coverage#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='Age Range' ordinal='0' />
            <column datatype='date' name='Covid Vacc Date' ordinal='1' />
            <column datatype='integer' name='Black' ordinal='2' />
            <column datatype='integer' name='Black total' ordinal='3' />
            <column datatype='integer' name='Mixed' ordinal='4' />
            <column datatype='integer' name='Mixed total' ordinal='5' />
            <column datatype='integer' name='Other' ordinal='6' />
            <column datatype='integer' name='Other total' ordinal='7' />
            <column datatype='integer' name='South Asian' ordinal='8' />
            <column datatype='integer' name='South Asian total' ordinal='9' />
            <column datatype='integer' name='Unknown' ordinal='10' />
            <column datatype='integer' name='Unknown total' ordinal='11' />
            <column datatype='integer' name='White' ordinal='12' />
            <column datatype='integer' name='White total' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age Range]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Age Range</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covid Vacc Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Covid Vacc Date]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Covid Vacc Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Black</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Black]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Black</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Black total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Black total]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Black total</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mixed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mixed]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Mixed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mixed total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mixed total]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Mixed total</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Other]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Other</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Other total]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Other total</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>South Asian</remote-name>
            <remote-type>20</remote-type>
            <local-name>[South Asian]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>South Asian</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>South Asian total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[South Asian total]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>South Asian total</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unknown</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unknown]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Unknown</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unknown total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unknown total]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>Unknown total</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>White</remote-name>
            <remote-type>20</remote-type>
            <local-name>[White]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>White</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>White total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[White total]</local-name>
            <parent-name>[COVID Vaccine Coverage.csv]</parent-name>
            <remote-alias>White total</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:black_latest_\%_of_total (copy):qk]&quot;' value='MIXED' />
          <alias key='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_605171217045606400:qk]&quot;' value='BLACK' />
          <alias key='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixes_latest_\%_of_total (copy):qk]&quot;' value='OTHER' />
          <alias key='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Other_latest_\%_of_total (copy):qk]&quot;' value='SOUTH ASIAN' />
          <alias key='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_latest_\%_of_total (copy):qk]&quot;' value='UNKNOWN' />
          <alias key='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Unknown_latest_\%_of_total  (copy):qk]&quot;' value='WHITE' />
        </aliases>
      </column>
      <column caption='Mixed_%_of_Total' datatype='real' name='[Black_%_of_Total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Mixed])/SUM([Mixed total])' />
      </column>
      <column aggregation='Sum' caption='week since firts week' datatype='integer' name='[Calculation_455989479409422336]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEDIFF(&apos;week&apos;,{MIN(DATETRUNC(&apos;week&apos;,[Covid Vacc Date]))},DATETRUNC(&apos;week&apos;,[Covid Vacc Date]))' />
      </column>
      <column caption='B_latest_%_of_T' datatype='real' default-format='p0.00%' name='[Calculation_605171217045606400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Black] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Black total] END)' />
      </column>
      <column caption='White_%_of_Total' datatype='real' name='[Calculation_721138907328589824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([White])/SUM([White total])' />
      </column>
      <column datatype='integer' name='[Mixed]' role='measure' type='quantitative' />
      <column caption='Others_%_of_Total' datatype='real' name='[Mixed_%_of_Total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Other])/SUM([Other total])' />
      </column>
      <column caption='O_latest_%_of_T' datatype='real' default-format='p0.00%' name='[Mixes_latest_%_of_total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Other] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Other total] END)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Other]' role='measure' type='quantitative' />
      <column caption='S_A_latest_%_of_T' datatype='real' default-format='p0.00%' name='[Other_latest_%_of_total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [South Asian] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [South Asian total] END)' />
      </column>
      <column caption='South_Asian_%_of_Total' datatype='real' name='[Others_%_of_Total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([South Asian])/SUM([South Asian total])' />
      </column>
      <column caption='Unknown_%_of_Total' datatype='real' name='[South_Asian_%_of_Total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Unknown])/SUM([Unknown total])' />
      </column>
      <column caption='Un_latest_%_of_T' datatype='real' default-format='p0.00%' name='[South_Asian_latest_%_of_total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Unknown] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Unknown total] END)' />
      </column>
      <column caption='W_latest_%_of_T' datatype='real' default-format='p0.00%' name='[Unknown_latest_%_of_total  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [White] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [White total] END)' />
      </column>
      <column caption='Black_%_of_Total' datatype='real' name='[White_%_of_Total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Black])/SUM([Black total])' />
      </column>
      <column caption='M_latest_%_of_T' datatype='real' default-format='p0.00%' name='[black_latest_%_of_total (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Mixed] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Mixed total] END)' />
      </column>
      <column datatype='date' name='[week]' role='dimension' type='quantitative' user:agg-type='Week-Trunc' user:base-field='Covid Vacc Date' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;, [Covid Vacc Date]))' scope-isolation='false' />
      </column>
      <column-instance column='[Calculation_721138907328589824]' derivation='User' name='[diff:usr:Calculation_721138907328589824:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[White_%_of_Total (copy)]' derivation='User' name='[diff:usr:White_%_of_Total (copy):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Mixed]' derivation='Sum' name='[sum:Mixed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other]' derivation='Sum' name='[sum:Other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Black_%_of_Total (copy)]' derivation='User' name='[usr:Black_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_605171217045606400]' derivation='User' name='[usr:Calculation_605171217045606400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_721138907328589824]' derivation='User' name='[usr:Calculation_721138907328589824:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mixed_%_of_Total (copy)]' derivation='User' name='[usr:Mixed_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mixes_latest_%_of_total (copy)]' derivation='User' name='[usr:Mixes_latest_%_of_total (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other_latest_%_of_total (copy)]' derivation='User' name='[usr:Other_latest_%_of_total (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Others_%_of_Total (copy)]' derivation='User' name='[usr:Others_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[South_Asian_%_of_Total (copy)]' derivation='User' name='[usr:South_Asian_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[South_Asian_latest_%_of_total (copy)]' derivation='User' name='[usr:South_Asian_latest_%_of_total (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unknown_latest_%_of_total  (copy)]' derivation='User' name='[usr:Unknown_latest_%_of_total  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[White_%_of_Total (copy)]' derivation='User' name='[usr:White_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[black_latest_%_of_total (copy)]' derivation='User' name='[usr:black_latest_%_of_total (copy):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.263456' measure-ordering='alphabetic' measure-percentage='0.736544' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[diff:usr:White_\%_of_Total (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_\%_of_Total (copy):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_\%_of_Total (copy):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_\%_of_Total (copy):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[sum:Mixed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_\%_of_Total (copy):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[diff:usr:Calculation_721138907328589824:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_\%_of_Total (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[sum:Other:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Day_Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
          </datasources>
          <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Black total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Black]' role='measure' type='quantitative' />
            <column caption='Mixed_%_of_Total' datatype='real' name='[Black_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Mixed])/SUM([Mixed total])' />
            </column>
            <column caption='White_%_of_Total' datatype='real' name='[Calculation_721138907328589824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([White])/SUM([White total])' />
            </column>
            <column datatype='date' name='[Covid Vacc Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Mixed total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mixed]' role='measure' type='quantitative' />
            <column caption='Others_%_of_Total' datatype='real' name='[Mixed_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Other])/SUM([Other total])' />
            </column>
            <column datatype='integer' name='[Other total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other]' role='measure' type='quantitative' />
            <column caption='South_Asian_%_of_Total' datatype='real' name='[Others_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([South Asian])/SUM([South Asian total])' />
            </column>
            <column datatype='integer' name='[South Asian total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South Asian]' role='measure' type='quantitative' />
            <column caption='Unknown_%_of_Total' datatype='real' name='[South_Asian_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Unknown])/SUM([Unknown total])' />
            </column>
            <column datatype='integer' name='[Unknown total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Unknown]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White]' role='measure' type='quantitative' />
            <column caption='Black_%_of_Total' datatype='real' name='[White_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Black])/SUM([Black total])' />
            </column>
            <column-instance column='[Covid Vacc Date]' derivation='Day' name='[dy:Covid Vacc Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Black_%_of_Total (copy)]' derivation='User' name='[usr:Black_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_721138907328589824]' derivation='User' name='[usr:Calculation_721138907328589824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mixed_%_of_Total (copy)]' derivation='User' name='[usr:Mixed_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others_%_of_Total (copy)]' derivation='User' name='[usr:Others_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[South_Asian_%_of_Total (copy)]' derivation='User' name='[usr:South_Asian_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[White_%_of_Total (copy)]' derivation='User' name='[usr:White_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Covid Vacc Date]' derivation='Year' name='[yr:Covid Vacc Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_\%_of_Total (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_\%_of_Total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_\%_of_Total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_\%_of_Total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_\%_of_Total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_\%_of_Total (copy):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_%_of_Total (copy):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_%_of_Total (copy):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e2f2</color>
                <color>#f3d3f3</color>
                <color>#f5c4f5</color>
                <color>#f6b4f6</color>
                <color>#f8a5f8</color>
                <color>#f995f9</color>
                <color>#fa85fa</color>
                <color>#fc75fc</color>
                <color>#fd65fd</color>
                <color>#ff55ff</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_%_of_Total (copy):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e1caca</color>
                <color>#d1a7a7</color>
                <color>#c28787</color>
                <color>#b26b6b</color>
                <color>#a35151</color>
                <color>#933a3a</color>
                <color>#832727</color>
                <color>#741717</color>
                <color>#640a0a</color>
                <color>#550000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_%_of_Total (copy):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e2daf2</color>
                <color>#d3c3f3</color>
                <color>#c4abf5</color>
                <color>#b493f6</color>
                <color>#a57cf8</color>
                <color>#9563f9</color>
                <color>#854bfa</color>
                <color>#7532fc</color>
                <color>#6519fd</color>
                <color>#5500ff</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e2e2f2</color>
                <color>#d3d3f3</color>
                <color>#c4c4f5</color>
                <color>#b4b4f6</color>
                <color>#a5a5f8</color>
                <color>#9595f9</color>
                <color>#8585fa</color>
                <color>#7575fc</color>
                <color>#6565fd</color>
                <color>#5555ff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]' separate-domains='true' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names] / [federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk])</rows>
        <cols>([federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok] / [federated.0f9m3da1ntzgq619ytt880y0izf4].[dy:Covid Vacc Date:ok])</cols>
      </table>
      <simple-id uuid='{6CA776AB-E635-4ABA-A37D-BE47C033AD4A}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
          </datasources>
          <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Black total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Black]' role='measure' type='quantitative' />
            <column caption='Mixed_%_of_Total' datatype='real' name='[Black_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Mixed])/SUM([Mixed total])' />
            </column>
            <column caption='White_%_of_Total' datatype='real' name='[Calculation_721138907328589824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([White])/SUM([White total])' />
            </column>
            <column datatype='date' name='[Covid Vacc Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Mixed total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mixed]' role='measure' type='quantitative' />
            <column caption='Others_%_of_Total' datatype='real' name='[Mixed_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Other])/SUM([Other total])' />
            </column>
            <column datatype='integer' name='[Other total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other]' role='measure' type='quantitative' />
            <column caption='South_Asian_%_of_Total' datatype='real' name='[Others_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([South Asian])/SUM([South Asian total])' />
            </column>
            <column datatype='integer' name='[South Asian total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South Asian]' role='measure' type='quantitative' />
            <column caption='Unknown_%_of_Total' datatype='real' name='[South_Asian_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Unknown])/SUM([Unknown total])' />
            </column>
            <column datatype='integer' name='[Unknown total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Unknown]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White]' role='measure' type='quantitative' />
            <column caption='Black_%_of_Total' datatype='real' name='[White_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Black])/SUM([Black total])' />
            </column>
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Covid Vacc Date]' derivation='None' name='[none:Covid Vacc Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Black_%_of_Total (copy)]' derivation='User' name='[usr:Black_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_721138907328589824]' derivation='User' name='[usr:Calculation_721138907328589824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mixed_%_of_Total (copy)]' derivation='User' name='[usr:Mixed_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others_%_of_Total (copy)]' derivation='User' name='[usr:Others_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[South_Asian_%_of_Total (copy)]' derivation='User' name='[usr:South_Asian_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[White_%_of_Total (copy)]' derivation='User' name='[usr:White_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]'>
            <groupfilter function='member' level='[none:Age Range:nk]' member='&quot;70-79&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</column>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]</rows>
        <cols>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Covid Vacc Date:qk]</cols>
      </table>
      <simple-id uuid='{22A18A95-03DD-4E52-8249-A0C16F1B07C0}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
          </datasources>
          <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Black total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Black]' role='measure' type='quantitative' />
            <column caption='Mixed_%_of_Total' datatype='real' name='[Black_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Mixed])/SUM([Mixed total])' />
            </column>
            <column caption='White_%_of_Total' datatype='real' name='[Calculation_721138907328589824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([White])/SUM([White total])' />
            </column>
            <column datatype='date' name='[Covid Vacc Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Mixed total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mixed]' role='measure' type='quantitative' />
            <column caption='Others_%_of_Total' datatype='real' name='[Mixed_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Other])/SUM([Other total])' />
            </column>
            <column datatype='integer' name='[Other total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other]' role='measure' type='quantitative' />
            <column caption='South_Asian_%_of_Total' datatype='real' name='[Others_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([South Asian])/SUM([South Asian total])' />
            </column>
            <column datatype='integer' name='[South Asian total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South Asian]' role='measure' type='quantitative' />
            <column caption='Unknown_%_of_Total' datatype='real' name='[South_Asian_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Unknown])/SUM([Unknown total])' />
            </column>
            <column datatype='integer' name='[Unknown total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Unknown]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White]' role='measure' type='quantitative' />
            <column caption='Black_%_of_Total' datatype='real' name='[White_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Black])/SUM([Black total])' />
            </column>
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Covid Vacc Date]' derivation='None' name='[none:Covid Vacc Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Black_%_of_Total (copy)]' derivation='User' name='[usr:Black_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_721138907328589824]' derivation='User' name='[usr:Calculation_721138907328589824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mixed_%_of_Total (copy)]' derivation='User' name='[usr:Mixed_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others_%_of_Total (copy)]' derivation='User' name='[usr:Others_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[South_Asian_%_of_Total (copy)]' derivation='User' name='[usr:South_Asian_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[White_%_of_Total (copy)]' derivation='User' name='[usr:White_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names] * ([federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values] + [federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]))</rows>
        <cols>([federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk] * [federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Covid Vacc Date:qk])</cols>
      </table>
      <simple-id uuid='{BD0758F6-FDCB-4068-B7A3-5C93771F3F6B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
          </datasources>
          <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
            <column datatype='integer' name='[Black]' role='measure' type='quantitative' />
            <column datatype='date' name='[Covid Vacc Date]' role='dimension' type='ordinal' />
            <column-instance column='[Covid Vacc Date]' derivation='None' name='[none:Covid Vacc Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Black]' derivation='Sum' name='[sum:Black:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0f9m3da1ntzgq619ytt880y0izf4].[sum:Black:qk]</rows>
        <cols>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Covid Vacc Date:qk]</cols>
      </table>
      <simple-id uuid='{BE6A473F-4B43-4B93-A368-F40D6E520800}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
          </datasources>
          <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Black total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Black]' role='measure' type='quantitative' />
            <column caption='Mixed_%_of_Total' datatype='real' name='[Black_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Mixed])/SUM([Mixed total])' />
            </column>
            <column caption='White_%_of_Total' datatype='real' name='[Calculation_721138907328589824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([White])/SUM([White total])' />
            </column>
            <column datatype='date' name='[Covid Vacc Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Mixed total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mixed]' role='measure' type='quantitative' />
            <column caption='Others_%_of_Total' datatype='real' name='[Mixed_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Other])/SUM([Other total])' />
            </column>
            <column datatype='integer' name='[Other total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other]' role='measure' type='quantitative' />
            <column caption='South_Asian_%_of_Total' datatype='real' name='[Others_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([South Asian])/SUM([South Asian total])' />
            </column>
            <column datatype='integer' name='[South Asian total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South Asian]' role='measure' type='quantitative' />
            <column caption='Unknown_%_of_Total' datatype='real' name='[South_Asian_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Unknown])/SUM([Unknown total])' />
            </column>
            <column datatype='integer' name='[Unknown total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Unknown]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White]' role='measure' type='quantitative' />
            <column caption='Black_%_of_Total' datatype='real' name='[White_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Black])/SUM([Black total])' />
            </column>
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Covid Vacc Date]' derivation='None' name='[none:Covid Vacc Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Black_%_of_Total (copy)]' derivation='User' name='[usr:Black_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_721138907328589824]' derivation='User' name='[usr:Calculation_721138907328589824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mixed_%_of_Total (copy)]' derivation='User' name='[usr:Mixed_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others_%_of_Total (copy)]' derivation='User' name='[usr:Others_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[South_Asian_%_of_Total (copy)]' derivation='User' name='[usr:South_Asian_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[White_%_of_Total (copy)]' derivation='User' name='[usr:White_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]'>
            <groupfilter from='&quot;50-54&quot;' function='range' level='[none:Age Range:nk]' to='&quot;80+&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</column>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]</rows>
        <cols>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Covid Vacc Date:qk]</cols>
      </table>
      <simple-id uuid='{A3F31E38-1053-4054-A3B7-20464F2FC297}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
          </datasources>
          <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
            <column datatype='integer' name='[Black total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Black]' role='measure' type='quantitative' />
            <column caption='White_%_of_Total' datatype='real' name='[Calculation_721138907328589824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([White])/SUM([White total])' />
            </column>
            <column datatype='date' name='[Covid Vacc Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[White total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White]' role='measure' type='quantitative' />
            <column caption='Black_%_of_Total' datatype='real' name='[White_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Black])/SUM([Black total])' />
            </column>
            <column-instance column='[Calculation_721138907328589824]' derivation='User' name='[diff:usr:Calculation_721138907328589824:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[White_%_of_Total (copy)]' derivation='User' name='[diff:usr:White_%_of_Total (copy):qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Covid Vacc Date]' derivation='None' name='[none:Covid Vacc Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[diff:usr:White_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[diff:usr:Calculation_721138907328589824:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names] * [federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values])</rows>
        <cols>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Covid Vacc Date:qk]</cols>
      </table>
      <simple-id uuid='{692B7CA1-0D4D-422F-83DB-15C64EE662EB}' />
    </worksheet>
    <worksheet name='Vaccination Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Vaccination</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='12'>Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
          </datasources>
          <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
            <column datatype='integer' name='[Black total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Black]' role='measure' type='quantitative' />
            <column caption='B_latest_%_of_T' datatype='real' default-format='p0.00%' name='[Calculation_605171217045606400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Black] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Black total] END)' />
            </column>
            <column datatype='date' name='[Covid Vacc Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Mixed total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mixed]' role='measure' type='quantitative' />
            <column caption='O_latest_%_of_T' datatype='real' default-format='p0.00%' name='[Mixes_latest_%_of_total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Other] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Other total] END)' />
            </column>
            <column datatype='integer' name='[Other total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other]' role='measure' type='quantitative' />
            <column caption='S_A_latest_%_of_T' datatype='real' default-format='p0.00%' name='[Other_latest_%_of_total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [South Asian] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [South Asian total] END)' />
            </column>
            <column datatype='integer' name='[South Asian total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South Asian]' role='measure' type='quantitative' />
            <column caption='Un_latest_%_of_T' datatype='real' default-format='p0.00%' name='[South_Asian_latest_%_of_total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Unknown] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Unknown total] END)' />
            </column>
            <column datatype='integer' name='[Unknown total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Unknown]' role='measure' type='quantitative' />
            <column caption='W_latest_%_of_T' datatype='real' default-format='p0.00%' name='[Unknown_latest_%_of_total  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [White] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [White total] END)' />
            </column>
            <column datatype='integer' name='[White total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White]' role='measure' type='quantitative' />
            <column caption='M_latest_%_of_T' datatype='real' default-format='p0.00%' name='[black_latest_%_of_total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Mixed] END)&#13;&#10;/&#13;&#10;SUM(IF [Covid Vacc Date]={MAX([Covid Vacc Date])} THEN [Mixed total] END)' />
            </column>
            <column-instance column='[Calculation_605171217045606400]' derivation='User' name='[usr:Calculation_605171217045606400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mixes_latest_%_of_total (copy)]' derivation='User' name='[usr:Mixes_latest_%_of_total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other_latest_%_of_total (copy)]' derivation='User' name='[usr:Other_latest_%_of_total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[South_Asian_latest_%_of_total (copy)]' derivation='User' name='[usr:South_Asian_latest_%_of_total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unknown_latest_%_of_total  (copy)]' derivation='User' name='[usr:Unknown_latest_%_of_total  (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[black_latest_%_of_total (copy)]' derivation='User' name='[usr:black_latest_%_of_total (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_605171217045606400:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Unknown_latest_\%_of_total  (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Other_latest_\%_of_total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:black_latest_\%_of_total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixes_latest_\%_of_total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_latest_\%_of_total (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_605171217045606400:qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Unknown_latest_\%_of_total  (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Other_latest_\%_of_total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:black_latest_\%_of_total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixes_latest_\%_of_total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_latest_\%_of_total (copy):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='225' />
            <format attr='font-weight' value='bold' />
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' value='268' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='color' data-class='subtotal' scope='rows' value='#1b1b1b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' value='false' />
            <format attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' value='#000000' />
            <format attr='font-size' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' value='20' />
            <format attr='text-align' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' value='center' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='bottom' />
            <format attr='vertical-align' scope='rows' value='top' />
            <format attr='text-align' scope='cols' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]' />
              <text column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
                <run>&lt;[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{86BF4DCA-DAA1-458A-B828-A1BCBCC2A6BF}' />
    </worksheet>
    <worksheet name='Week Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
          </datasources>
          <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Black total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Black]' role='measure' type='quantitative' />
            <column caption='Mixed_%_of_Total' datatype='real' name='[Black_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Mixed])/SUM([Mixed total])' />
            </column>
            <column aggregation='Sum' caption='week since firts week' datatype='integer' name='[Calculation_455989479409422336]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEDIFF(&apos;week&apos;,{MIN(DATETRUNC(&apos;week&apos;,[Covid Vacc Date]))},DATETRUNC(&apos;week&apos;,[Covid Vacc Date]))' />
            </column>
            <column caption='White_%_of_Total' datatype='real' name='[Calculation_721138907328589824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([White])/SUM([White total])' />
            </column>
            <column datatype='date' name='[Covid Vacc Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Mixed total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mixed]' role='measure' type='quantitative' />
            <column caption='Others_%_of_Total' datatype='real' name='[Mixed_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Other])/SUM([Other total])' />
            </column>
            <column datatype='integer' name='[Other total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other]' role='measure' type='quantitative' />
            <column caption='South_Asian_%_of_Total' datatype='real' name='[Others_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([South Asian])/SUM([South Asian total])' />
            </column>
            <column datatype='integer' name='[South Asian total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South Asian]' role='measure' type='quantitative' />
            <column caption='Unknown_%_of_Total' datatype='real' name='[South_Asian_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Unknown])/SUM([Unknown total])' />
            </column>
            <column datatype='integer' name='[Unknown total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Unknown]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[White]' role='measure' type='quantitative' />
            <column caption='Black_%_of_Total' datatype='real' name='[White_%_of_Total (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Black])/SUM([Black total])' />
            </column>
            <column-instance column='[week]' derivation='Attribute' name='[attr:week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_455989479409422336]' derivation='None' name='[none:Calculation_455989479409422336:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Black_%_of_Total (copy)]' derivation='User' name='[usr:Black_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_721138907328589824]' derivation='User' name='[usr:Calculation_721138907328589824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mixed_%_of_Total (copy)]' derivation='User' name='[usr:Mixed_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others_%_of_Total (copy)]' derivation='User' name='[usr:Others_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[South_Asian_%_of_Total (copy)]' derivation='User' name='[usr:South_Asian_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[White_%_of_Total (copy)]' derivation='User' name='[usr:White_%_of_Total (copy):qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[week]' role='dimension' type='quantitative' user:agg-type='Week-Trunc' user:base-field='Covid Vacc Date' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;, [Covid Vacc Date]))' scope-isolation='false' />
            </column>
            <column-instance column='[Covid Vacc Date]' derivation='Year' name='[yr:Covid Vacc Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_\%_of_Total (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_\%_of_Total (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_\%_of_Total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_\%_of_Total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_\%_of_Total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_\%_of_Total (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_\%_of_Total (copy):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]'>
            <groupfilter function='level-members' level='[none:Age Range:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</column>
            <column>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[attr:week:qk]' value='*mmmm d, yyyy' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[attr:week:qk]' value='*mmmm d, yyyy' />
            <format attr='display' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' value='false' />
            <format attr='display' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_%_of_Total (copy):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_%_of_Total (copy):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e2f2</color>
                <color>#f3d3f3</color>
                <color>#f5c4f5</color>
                <color>#f6b4f6</color>
                <color>#f8a5f8</color>
                <color>#f995f9</color>
                <color>#fa85fa</color>
                <color>#fc75fc</color>
                <color>#fd65fd</color>
                <color>#ff55ff</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_%_of_Total (copy):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e1caca</color>
                <color>#d1a7a7</color>
                <color>#c28787</color>
                <color>#b26b6b</color>
                <color>#a35151</color>
                <color>#933a3a</color>
                <color>#832727</color>
                <color>#741717</color>
                <color>#640a0a</color>
                <color>#550000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_%_of_Total (copy):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e2daf2</color>
                <color>#d3c3f3</color>
                <color>#c4abf5</color>
                <color>#b493f6</color>
                <color>#a57cf8</color>
                <color>#9563f9</color>
                <color>#854bfa</color>
                <color>#7532fc</color>
                <color>#6519fd</color>
                <color>#5500ff</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e2e2f2</color>
                <color>#d3d3f3</color>
                <color>#c4c4f5</color>
                <color>#b4b4f6</color>
                <color>#a5a5f8</color>
                <color>#9595f9</color>
                <color>#8585fa</color>
                <color>#7575fc</color>
                <color>#6565fd</color>
                <color>#5555ff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]' separate-domains='true' />
              <tooltip column='[federated.0f9m3da1ntzgq619ytt880y0izf4].[attr:week:qk]' separate-domains='true' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontalignment='1' fontcolor='#787878'>&#9;&lt;[federated.0f9m3da1ntzgq619ytt880y0izf4].[attr:week:qk]&gt; |  </run>
                <run bold='true' fontalignment='1'>&lt;[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#787878'>Elapsed Week:&#9;</run>
                <run bold='true' fontalignment='1'>&lt;[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Calculation_455989479409422336:ok]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#787878'>Year of Covid Vacc Date:&#9;</run>
                <run bold='true' fontalignment='1'>&lt;[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#787878'>&lt;[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]&gt;:&#9;</run>
                <run bold='true' fontalignment='1'>&lt;[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names] / [federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk])</rows>
        <cols>([federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok] / [federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Calculation_455989479409422336:ok])</cols>
      </table>
      <simple-id uuid='{B237D4D7-EE4E-4783-8480-9EE6FCDECA2A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='COVID Vaccine Coverage' name='federated.0f9m3da1ntzgq619ytt880y0izf4' />
      </datasources>
      <datasource-dependencies datasource='federated.0f9m3da1ntzgq619ytt880y0izf4'>
        <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
        <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88000' id='16' param='horz' type='layout-flow' w='98400' x='800' y='1333'>
            <zone h='88000' id='14' param='horz' type='layout-flow' w='98400' x='800' y='1333'>
              <zone h='88000' id='12' type='layout-basic' w='98400' x='800' y='1333'>
                <zone h='8740' id='3' type='text' w='98400' x='800' y='1333'>
                  <formatted-text>
                    <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='28'>VACCINATION RATES BY ETHINCITY AND AGE</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='79260' id='5' name='Week Rate' w='74202' x='24998' y='10073'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='79260' id='6' name='Vaccination Rate' w='24198' x='800' y='10073'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='9334' id='19' type='text' w='98400' x='800' y='89333'>
            <formatted-text>
              <run fontalignment='1'>Create By.........Type Here</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6833' id='17' mode='checkdropdown' name='Week Rate' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]' type='filter' values='database' w='16800' x='66100' y='10333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='25' param='vert' type='layout-flow' w='98400' x='800' y='1333'>
                <zone h='8740' id='3' type='text' w='98400' x='800' y='1333'>
                  <formatted-text>
                    <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='28'>VACCINATION RATES BY ETHINCITY AND AGE</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79260' id='6' is-fixed='true' name='Vaccination Rate' w='24198' x='800' y='10073'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6833' id='17' mode='checkdropdown' name='Week Rate' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]' type='filter' values='database' w='16800' x='66100' y='10333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79260' id='5' is-fixed='true' name='Week Rate' w='74202' x='24998' y='10073'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9334' id='19' type='text' w='98400' x='800' y='89333'>
                  <formatted-text>
                    <run fontalignment='1'>Create By.........Type Here</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6E4EF045-3137-4116-A22C-D4126CB03E95}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2DF5633-26F5-4C95-A2E1-297479237CC8}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0EBFE2E1-4409-41DE-847D-D51B70DEAF4C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61C2744A-4C64-441D-A567-EA66F8FBE71C}' />
    </window>
    <window class='worksheet' name='Vaccination Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3001F099-F502-4A0B-8261-C52E612AA107}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{932F3707-6555-4ECE-AC8F-21A323FEA295}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91FEAA54-7CC4-4427-A7A9-B13170FBDFA9}' />
    </window>
    <window class='worksheet' name='Week Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Calculation_455989479409422336:ok]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:week:qk]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26201443-F634-4DEF-8F15-4445D6DCF9AE}' />
    </window>
    <window class='worksheet' name='Day_Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:White_%_of_Total (copy):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Black_%_of_Total (copy):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Mixed_%_of_Total (copy):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:South_Asian_%_of_Total (copy):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Others_%_of_Total (copy):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0f9m3da1ntzgq619ytt880y0izf4].[usr:Calculation_721138907328589824:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2020</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[:Measure Names]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[Multiple Values]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[none:Age Range:nk]</field>
            <field>[federated.0f9m3da1ntzgq619ytt880y0izf4].[yr:Covid Vacc Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A2645F8-EC0B-4CA8-B9C8-35FB07391281}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Vaccination Rate'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Week Rate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4546A42B-FE26-4BFC-8847-6F6C58D238CC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Day_Rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy92XNkSXbm97tr7Ajs+44EEgkg98xasrqqq7uHLZKiSBvNSGZ6GY3Ni8z0
      74yZHqR5kEkzI9qMaZqkhk02yWYVWVVZS1bljj0T+xbYEXvEXVwPgeXeiwAikJlVGcWOz6yW
      43GOu1+H+73++XE/LgkhBFVU8TsK+W1XoIoq3iaqA6CK32lUB4ADmUyGbDb7tqtRxQ+I6gBw
      wLIsbNt+29Wo4gdEdQAUwW5shZ145lje31zm4ZNxsubJ4NjbWGQ3ZRQEIdhcecnTqXlsQNgW
      M+MPefDgAQvrOwDkM3GePnrIdiIHgG1kmXr2mPXd5A/2XFWcRnUAeCGy7G8esJc86ZjJrEVf
      i8bMwh4AZi7BzLOHrB7kAcgmN1nYzNPX0VwwkGR6BoYZ6KglnRWAYGF6mqaePl5MTwKwuTSL
      1tjD1twUmepH562hOgC8kPx0dbcgSSdJTQ21bOyY9HXVArCysETPpQGUw9/N+Cabuzs8fvqM
      jCGQJAmfP8DGVppLvY0ARGtDTD5+ghKIABCua2Bt9hmxrU2SuR/yAatwojoAvBAWBwcHJOJx
      8qYNCMbHJ2loaUVFABZ7u9uMj08y82IeALWmmc6WFjoiEjtpC4Dsfgy5thX9cCDt7ia5PDaG
      cbCLBfjDdYyOjhCuaSDqPyrcJpczXNUxcjmcHwjbzGNYJ64bISxyOdNlk/faWCaGYTlsbHJ5
      ZzmCfC6P0yFkmQamdZKLsC3yhumyyXlszHwey3amnH6eXM492r3PV8zG+zyWtw1si3zeXbd8
      LnfqeQzTctnk8kZ1AJyCnSe2n0LOpUjnbcAmGgmzsbbCQSoHKNx8/6d8/M/+kF+8cwUAf7iJ
      9noVO9pDV1QFQGgh+tobDzOVGLgyTHxrg6GxMRQKHXdzY4Ph6zeOBwlYpJLuVahMMoXlkM1c
      mqzh6A7CJJ06bePuMDkyzk5lW6QyGYeGIJ1MuTqMkcuScw4ayyCVdXZem1Qy7So3n05juBYR
      LFLJjEsnlUq55GwyhXv4mqfaIOt5HjObJufgY7ZtkE7nXTZpbxsYOXKOQSJsi3Qmh1T1BJ8g
      mUwiyzLBYPBtV6WKHwiqU9jb28MwjLN0/8kjn89j2zaaph2nKYri0hFCuJZKJUlClkt/SC3r
      5G0qSRLe94437VV0itl48Sp5SJKEcD6zLJ+WhQBnPsV0zpHL0pEkJDipn1c+wwY4s25nfAEE
      6WQSU0gEg0Fsy0TTdBcxhMK8SkgKqnLSAYQQ5LMZUHU0GQQyilK8g1hmnpxhEwj48WTN/POv
      eLmVp//yKMbmDMvbGUbuvEd7bRARX+TPP3tJe1cnd68OMjfxBVtmD+9d7ypaTrlIJpOk02n8
      /uNJOcFgEFU9eU8YhkHGMX1QVbXkF0MIQSKROJY1TTv1ovGmeWVJklAUBdM8+YyrquqSvTay
      LCNJkmvwlSpHUZRTg1zTNIz8yRRD03WXrGoapvd5PDql5HJ0JElCVhSsw2c+bhPn83hs5MMX
      mO1sA4fOGa+uNP/Hv/233P+7P+PPPn3Kr3/1n0kV+TAsfPcpD2a2XGnCzvBf/p//k1/9+jMm
      H37JZiJ/2vAQX/7Ff+b+xBKnR6AgmczT2tFBa6NGTm7h5/eusr25D0ByZ4doWwd93e1k45vk
      fTXoZnUtsYqLQz3rBzOfYzeeofNSLbvbsL8yxZ/d/4Jwyw1aWWYxLtFTq7G1+4y/3dvkF+9f
      RZZAkhQUyUbk91jZCRMzp2l57xqyJIGw+PJv/4K5rSR9Q2P84zfPud52/fQAENA7PEoiccD4
      5At0EcG2bYSZ5P79B4yMDHElkGZqYhw9s8mBrLC3s83IjR78SrGnqaKK4jhz8to6cJV/8Sc/
      ZfbpNACL08+wNR9zMzMsbhn80R//tzSE4Ol3j2hobUc+nMNIso//8X/+X+hua8POZMiszrN7
      tDQmcixvCv7olx8yv7HH9StjvP/+GKf7rGBrbZkXc8vUNfYQ0eN89mCGjq5u7t27i5Q7YHZm
      Fi0Y5Z2f/xG//NlPuHl1pNr5q7gwzuAAOf7rn/4ncmqA4bsfYe0sEg3IPF7cojbcTm+DwaOZ
      Da4M9qJFGthemGY7fkAma+Bv6OYXN3tYS0joyWUereRoVHZY282hBSL0tdcxO7/GzXsfk16Y
      pe/dMWYezdNSI5CaBmit8f3wrXCIZDKJYRguDuDz+Vwk17Is8o45pqIoLtJ8BMlBmIQQrk12
      iqK45uVwej7vlY/I9pGdVy5mc1Rv53y+VDnyIaF1dgtVUTCd5XhkRVGwLcv1JS9l45XL0ZEk
      CUmSjp9HOqzv67RBxS6DbsyPM7m4Q8/QGOwvsLKdZGD0Nh0NIURmi99+MU5NcztDLX6ezyzR
      NTRGT0vta5VZDgkuhkQi4eow4XDYNWiqJPgM2eMUeyUSrKqvRoIPy65QR5ggmbZ498MP6Wur
      I2mpfPjhh7TXF1ZbsjsbdN/6iLtXB1ld2eD6u++wtTJfhExXUcX5OP/V9hbh1yUefPYpNa39
      1Mh5/uGT39LU3c/B5g5D/a1sPP+MRSnIB9d6efLgAbtpGxuK8IkqqjgblfkFEDbZvIkiy0iS
      SS4nUGQZWavh3r27KMJCURQkSSKXSWNZeVo7eqqdv4oLo0I5gEDYAlsIFyk7mtMezVElSUaS
      BLZ98tvroBwSXAx5r0NH06okuBwSbLp3AZXTBpIsH8/nX6sNDnlDhU6BJHbWXjD+cp3+kRsY
      W7MsbKS4evcdmiJ+yMf54v5DIq293BjuY+3lA7bMDm6NtL92yYZhuLY/aJpWcgDoul5WvufJ
      pXTKIcFem2IkuFQ5xUgw4PbaeoimKEKCvTpFZa+NJLnTPPKZnmBvG5QgwU6dCp0CmSyu7DB4
      eZjGKCTyNfz0ncusxwoHUpZmZmkZvEJfZwv51A4HQkFkfnf3MFXx6qjML4AQWJZFfG+TpfUs
      QaW+sIEpt8/9+yuEFBtFP+Dx3Dx+e5+crrO7lWLsZg++yhzSVVQoKnMAyCqdbbXMLm9R334J
      PbXMJ/eXGLnzDm2jQcxEjM+/mwJfDTdvfoxlHzA9lUF7PQpQxe8gKpQEvx0kk0ny+fwpEuzd
      En1RCCFO7SB9FQLoJXxeMv29kWCPs8lro6hqgQR7bc4p55XaQJaRHZzGywku1AaVTYIhE9/i
      yfNZui9fw9qdZ35978QTbBuMP/oOO9JOf5POs4mX9I7coK0u9Nrl+v3+c7c3G4bhWtFRVZVA
      IFAyX2dH9XbkYmle+WhVyZt2no0QoqROsboI23Z1GLlEHpIsn+rMpcp5pTawbYRj0BdrE1mW
      XQNCFCHBznwrcwAIi5mZBcZuv4NflZhYE3z00UfHP2+/HMfXdZW+eh/TTx8xducO088mab1z
      49S5gu+leo43XbkfUK+N186b9io6xeRSZZ8lu9K8eZTzPKVsON12Zem84Tao2AGQTBzw6OvP
      CTb1ErJSfPr3v6W9/xLba5v4pDyZzYcsWD7uXmnnyYMHHGRE1RNcxYVRmQNAVmltaSRpQt5M
      o+o11NVK5G0/9+7dJbUxz9P1BHoqi5AVopEAek202vmruDAqlgTbZp6DeJJQTS0inyaVs4hG
      a1Dkgic4Gd9H0oL4VZt4MktNbS2q/PqeYEmSzuUAtm2fcjZ5HWHFmrTqCf4et0M7n8/jGCvV
      BpX5BbAtpp4/Yms/TbCxmzZ/mpfrSa7dvk1dUGd7eZbJhQ2Slsp7w22Mv1ihY2CU/vb61y46
      lUqdu304GAy6VomKIZ/Pu+LfFNv+/KPzBJ9jI4Q4VQ8433t8Si5DpyxPsMfDLCsKeJ/H4WGu
      TLeRrDBy411uDnfR0FjDVlzlvavdrKzvAtDUPcQH796gq7WN9fVtRm/eYnt1geqp4Couisoc
      AADCZD6Woa8lgKr50X0+rMw+9+8/IJk1ia2u0dLRxsBgP/OTE+zG09XzAFVcGBU7AJJba0Sa
      O5GkIFJmhd9+/oT6tg7u3btLyAc7SYvGiJ9sKk4yeUBLZ2+VBFdxYVQsCX4bSCaT5HI51xzf
      O8/2+/0lPcP5fN41D30TXlA4TZ5LeYK9pLGccs70BJ9jcyapf8Nt8H0sBFQmCUaQ2F7j2ewq
      YzdvIyfXGV/c58b1UfTDvve6e//PLd3zx/f5LnZQX9d118qQEOIUiSz23inm9DnC0fMepXnl
      M21sG+HsnJKEcN6Co+uIdNolYxgIZ+cMBBCOM82EQuCQpVAIKZVyR2SLRCAeP5FramB//0SO
      RuHgwN0A3jSvrKqF+h3VV1HA7wdnvFFvOX4/2DY4n7m2FvYKO4srcwAIi5m5da5fHWRqZgI7
      YzLcXcPsyhZDtXmmd1Wu9rd+L0V7b4l5Ux9IZ562Z6tBsTSvXOxt7pWL5SvZtmsbgC1J2I7O
      bSsKtnO1SZYRhuHW0TRs5/5/nw/bscpl6zpWLlfoaEc6fj+2o9OJQMAtB4MuuViaV5YOo28c
      pUmKgqQo55aDJIFlYTv2Yolg8FiuUA4gUxsQfP3gMaGaIIFwA9GGOqzEDl9/9ZDnj79lfn2/
      dDZVVFECFfsF2M/YDPR3s7GXRs2mmJnW8df3MtJbz8KBQl/b64VAqaIK8AyAg4ODiokO3dLc
      wPrWPu0dXShGgo3dDB26zUFOoc4P29vbb7zMXC5HPp93nfHNZrNlRX8uhVKe4FIEFwqEzjnF
      KWUjSRKSxwmkKEphunIk5/NYjrrJhoGwLBdvUGwbyxkMLJXCcjrP0mlsw3BxADWddhPadNrt
      5fXI5ehIFKYsxyRYCORs1k2CMxlM505WwwDbxnbyumwWs9hmuEgkQqVgMxEjkUhQZ8lEhEEy
      lcYfriHiUxHZHT794hmhpnbuXh1id22GbbOByz0Nr1VmKpUinU67SG8oFHKt+lRKdGhJklBV
      9VybVwmMparqKS5RykbTNEzTdPElTdPIO26h0fXz5XJ0ZFlGdmy9LrSBguG4ucZrc/S3c7aB
      rmvHt9C4BsDRm04kl/nNwzgjDXuM79ZxybdHJhgibTfy3rUuEtvLpKQ6ssk9unu6ihKJ1fFv
      +GR8ld/7/V+wNL3AnbvXLrBVuRAY672PPiaoZPnu2w3uDLcyt7HHWF8L2b0YXbd+ylCDgpVL
      srq/g5nzI/c1lV1CMRwRTecb3ysf/RHOkos+zWFEi/NsSuV7VI+L1s0b77/cci5at6N/yrV5
      9TY4qV+hzFLlSAiBJ58TnaIcQAo1srnwBREaycaXeGElGBzo5LP7/8jWRi93BqLsJDf5v//0
      z/iT/+lfU5Nd5uW2zS9/+TMCaqERVhY3aGjw8fD+N3QOXiFnWPi1w9GYT/L5J5+SD7bx8Qe3
      0Yr0H00VfPPZJ9S3t+HzRwiEQpjrm9y/v8RgbzNrzz9nRYvQFbYI1dazvpDCEqBUj0VWcQEU
      f3VJAWqVLLtZnVrF5MAIEvZrdAxdR16dYzG2Qlpr4tr1m9wYDPGXv/6M/bUplnZPPj23P/6Q
      xmCUGj3Nd1/e5++/nTj+bWv+OdnoZSKJCWa3ilyRKGxsFCKhIJatYaWW+erBODVN7dy7dxdN
      loiEwyAswrX1GMk4iVQSu+rSq+KCOHMVqK9F5bGIMhzZ4aXVhl/TqQkHkMJhdN2P7PMRMnd5
      OLVHb08DSm0HPitBLGYCEjV19fgUQd/YdSZf/paAKhGLxYDCF2bryy/YkH38wlhjdjlEfj/G
      4MjVgqNLkunqH6QpZxIIBsHuIpu3CAQKHtpocwfD4XpUnx9dU2mjj6FBgfoGFnW9AbaKOdxK
      /V4MXhuvnTftLPko7WiqchGbcsspVd9i8pEH+aLPc5E2KDyvjCTZF3i+QvA0IYrrvNGtEJvL
      M8wsbgIyg2M3aKk9IYep3TUeT8whgLbeKwx0nk9YEzvrzK1s0dTRi9/cZzm2R3vfZZpq/Agz
      zfj4LGqknv62Wl6+XKLj0mVq/K+3qvuqh+IzmYzrj+/3+09Fh37dQ/FQ2VshTLPIVog3fSj+
      kANY1tEAAFkuJzBAIXqgU+eIOL9RP0Bz1xDNXUNFfwvVt/PBT8qN3CaIra/R1DFAXSTA9MQM
      vX2XCAQKnkBzZ4FMqJPLzQHmZyapbe9mZnKK2zfHXvtMsGmargYsJ+qbdwXkLJ0jSJJ06o/v
      TSsme/MplW+xVaBS5RQ7D1DKpli9ZNlbl/PlcnQKK2Hy8WAryJxroygyQnDm81SoJxjMXI6Z
      iWfE9pKIbJynT5+zs7/L5NQs+xmJneVxZhbWiNYEmZmcIra1Vz0PUMWFUaGeYJu6jn5aNcH0
      0jLd3aN0c8DiVore1iYwc7x7u53x55PUDlzlZm09z1/Eqtuhq7gwKnMASDIB1eLl8i6jo6Pk
      dpZZ3rYZGe7CrylY+RQTEzP0DV3BziV5ubjJ9Rtjb6RoRVFcc/5ySO7RtKGUzhFkWT7FK7xp
      XvmIaB6lHTnGvGv83jy89S9VzlGeXvJZ2oaSdXndNjjyAZxcEywdTnHOq1thkmNZkitNVQs6
      lTkAkPAFghiZReLJLCFZIpvLweEMX9b8aJLB7l6c9ktdXOrIsrkdfyP7g4rFuCmFcm6WfxMx
      f5xOrSPn2oVj/JQh27b9CrGE3BPQi5Zbjk5hGn+xfI/I748uLtD0xCzDN+8SVE0eP9xjtCfK
      i9Vtxnqb2Z17jmi+wpWmAMJM82JtCcvoeiMDwLsN4PvYDl3s0Lk3rRgR9aYVq+up7dCeVaBX
      KaeUXGwb9kXzKLduhSMO7mXQ8204RYKdOhU7ABLJOE+++YJISzP+UD3h2jDWVoz79xcLgbHs
      x6zNBRlqDtDS1cPqCxMhCg9cRRXlojIHgKzS0tyIpQWIZy3s9Crj4wrB1kGuj9WRXHvJ1L6F
      tLdP2sixM7XK2obGtdv9+KpMuIoLoDIHADJ9Q8Nsbu3S3duCYqXZiedobipMcUJt/fSpG0id
      HdRFQkiSSTptv5HO/30etXzT+DHV9e1BgnPihVToADici9o2lmVh5XLksylS2RpqggXHlITA
      NC0sI0MstkN9a9sbKTcUCp1LaotdlF2Os8x5mXYxz7I3zSsX2/pQyubIG+30Spdj4yWSpWwU
      RTlFyAvtQtlyOTre3bonO2SlM22KHYp36lToABC8eP4UM9RAwLSYn52hvunEi5yJvWBizaS3
      w8fCzEtEIMLG5Cy3rw1/7zXzhkYUQry1O8KKRWSrqMhwJZ75VdrAGxWi6B1hnjYAznyeyhwA
      tsHWfhySOYKROqxMguXVDcK19awd7LK7uoNsWGxsa7RoEi9W1khnwbw2XKEPVEWlojL7i6RQ
      E62nf3iQZ+PTDI68R0DaY3w5RmPYRzToJ9x2me2ZpzTcvElbX56vH81W6MNUUcmozD4jyQxe
      6ubJ42cMjNzA2FtkOpbm2o1rhH0qQrQz+eg7Qs3dWPFNvp5eYez2nR+set5TSq9i4z0NVeok
      WrHTauWcECtVdjEb27YvbPMqz/OqNs7YSOXUzQunTmUOANtmZXkFSVE4iCdoj9YSSsnoh+7r
      vfUVkqaElIijt7QSDvjemMPKu7W5WGS4cDh8bh6GYbiIsqqqb/w8QLk2zv9epJyL1u2HOA/g
      bYNy2+S8NqjMASDJdA9cpvFgg9V4lom1TbpawrxY3Waku4loUztj0VomZlaYm3lBx8AlXkxM
      cvv2Rc4dF4dlWSXv3SoF+3D16qw8vHI5Okd/sB/kjjAPCS6nbj/IHWGHXuqSd4QV+Xud9TyV
      uR1aktB9fmKxffp76/CHm2lpb8ZI7PHkyTg5WyEf36OxrYvG+gjjT54S2zmoboeu4sKozC8A
      YCQ3sYLNBFQ/ucQGSwsB9EgLXfUhfJrEwlaSS2O92BmJEV+A2eWD6nboKi6MyvwCAJYcpL+7
      GdAYGeknI9cw2NlEOBxClgQdPb3osoSw8mzupLl5feRtV7mKHyEq9gugaRqpbAZVCaMHIrS3
      Bjhy+EmSQjRaCOIVqGlkdKTxjZbr9Nrquu4KlFXOqo+u6648vCjmCVZV9Vz5tCe4sBfe7Rn2
      2hy935yrIqpnw6DqjGl7OD8+2UZ8VF/DcJ4PUMjn3QfP8/mTffqHVmQykktOp0/kQMAtAwSD
      7jSvrCgSqiqRyymH9ZDQdYlsVj7TRtNkbBsMw3bppFKVvAokLMYfP8SQFNRIE2J/laxh0zR4
      nZ6wyWpSpqel7nsp2jAMVwfVNO3CN8V7VyKKhUd/NS+o2+upaaonKhqnIqkJIbkOrNs2pNMn
      Oj4fJJNOWSGfF5jmSW8OhSAeP9EJh+HgwCmrJJOmayBFIrC3d6JTVwc7Oyd1ra93y0dpu7vm
      mbKmSfh8Msnk4SXXqkQwKBOPWy4bZ76BQGFAZzInlWtokNjaqugzwRJBv0YilSEYEKihLt69
      O0pia40vP/uC+198UY0OXcUbQcV+AQ5yMu/evc6TyRdoto90QkIN1fPue7eo3VWr0aGreCNw
      DQDvuuzbg0R7Q5Bvvn1G//A19Mw6D2c2uX7zGrIquOQ/vcHrTeDoKKD3tNObKOtNXJAB51+I
      YVnFTmadb3NaPjoRJlw6ziOPQhSXnRzAq1PIwzkVk11ywcad5pVBPjx7bB0/m1MubkNRHTiO
      MH1S7YODg6K7+t4G0vEdVmO71DV3EFHzrO+k6epsR5EBO8fcyyXkYJTejmbyqX2Stp/6yPn3
      95ZCLpcjl8u5CKzP53O50191O/TrBsby7oQ8KvvC92MpJQJjKfKpAVAyyJWiYFk2Ao+Ng5+o
      WhE572mDYjoOWTo8FG854gLJyol8ZOPkRbIig+dIpKqpGPkigbGi0Wjhf4Rg6uHnvNyBn/3s
      HkHtNAkUtoVAJhF7QTrYS1vUveohhOD+p3/DlXd+Tn1IO87Xsm1kWSlxdFGwtzZHU0cPTfU1
      zD57Rk1YZy8vcbmjHnNrklyog6H2CPV1IZ4uPiFj9TPY23FepiWRTCZJp9OuyHDBYNC1IlMp
      4dGPynaT4jLDozuIsqa7ZUVRsD1fQb1EqHMvGT8qp2R49JwnPLrPneaVJfkwMJZxMgBOhUf3
      nYQ+LzxPYQAcRZM71smetx06t8Lff7fLv/qX75M3TLaXXkCoiaagAoEguXiKue/+nMe5Yd6p
      mWdWynJ7sJ3utpNwh3biBV9/PUU2cokPRxp4Mb9Ce1c3E89nuTbSzcLKJl39Q0SDxZcL89ks
      mwsv0X19+CLtDA6GefJijwUjRVhYJLbmWdO6kTM71Hf1s7VUPR1VxcVRfBXI18adQZ0//dVf
      szL7kK8mN3jwN3/GN18+YmkvzjeffoWlqGi6jozAtCz+6q//0pXF7DffcvsP/huW5l4wfv+v
      +OzJHJlMksWFdbZXZ/j1r/4j/+k3D4vXStg0947w/s0RVpdjZJLb7G/vovh9aLoGoWY+/sl7
      pHbW2Vhf4+XkJLPzL8lWCoWp4keD4l+AzD5muJWuyBrL22mEXSAbqm4zPz3NTjzFlZFOJl7k
      EAGZjp5BcmtPTuyFxYO5GOHEBEtzS/z8zu/TvPobPn1UuMBi/OEE9375M6YXcmzFNgkFNLJS
      4GQOL8koVoLvnm0xdvMWcmqDyaUDrl8bQFckrFyCh999S8fAFXpa65DIsr1l4K/uhajigige
      Hdo2WVqcJy+H6OtsZn15AYINtNZoLKxsEKlpoKE+wOL8Ko2NUZRgHbnEDnMTD1naSqEEIty4
      fovejkb2t7dBEWxs7NDe04uRyeJT8sT20tTU1COMDOGARlYOvjaJfV0kk0kMwzgVHdob6dm7
      OmNZlmuXqKZppxxhpe4I+8EuiVZUTMs8Uy5+JljFcgacVT3yIQl2Hj5XvCT4e4kOXV4beOMC
      Ocl1xd4UP/voMxb2BQOXx9ibf0TK0hgYvU1HQwh7b5b/8vky3T2dtOhp5mMH1DR1c2uk77XK
      LIcEF0MikXB1mHA4fGrQVEnwD0eC8x4SLIqQ4COdCvUEC5LJLIFQmMb6GjLZDIFw/fEXIrkX
      Rw8HaWlpwsjnUTSdzbVVqhSgiouiQj3BcPnWPTDTPJ2Y5Oa7P8NKbfB8chojlWJ45DK/167x
      3XePee/dO3SZeR4+marU0VxFBaMyBwCCnfUFFtb26L0yysbiLKu7aS5fu0FLNEhqd52HD14Q
      auwktbPG0+kFeq/cfu3TYFX87qFiOYBtGezvHxCI1KKJPAdpg9raGpTDY3HJ+B6W7CcaDmLl
      M+SESsh/9hbkclAOCS6GYk1YsST4lBe3TBJsmefIRUhwKeLskcvRkSQJSZawj+bzh21gO73j
      HvJdqg0q9gswN/GEhAjQ2e1jZeopNhLRnhEutdWS3Z7n4csDujraiIZ1psbvc2D188Hd1yPB
      UHw7dKkBUM4Zge8jMFaxlZQ3EhjL9gTG0nERZTzbrjVNnCLBuubW0TlfLkfn6D4A1xVJquLq
      8JrH5uR+APceqXyxi7IrBrbJ5s4BQs2SM+rQwp2MDoZ5OnfAnh82lrZQbZN4Kst+bIVQWw/5
      tSoDqOLiqMwBIMlEovUMDA/yZHwCXfhJxQWyCusbmwR9Ol0D19icesrL3RQJI8fmlo+RGz1V
      Z1gVF0LFDoCBvnaePHpK7/B1fNkYz+b3uX7jKkFdQVg5nj16hL+xk9GBDiQpy/partr5q7gw
      KpYEvw0kk0ls2yYQCByneYNaFYv5U+rIZEWT4HLuCfYQ5Yonwd428HqCfwwkeG1ugumlHS6N
      3mBv/jH7WY49wVZqm0+/fEp9Rx/NWorZ1R3q2/q5NtT12iWrqnrugXbLsi68HRp+ZCS4nOjQ
      DqIpNOEiokCBKBs/PAnWPXU7vifYS4LzlewJFiYra7u0trUSDQdI5/K0tnfTGC28mZdezNHQ
      0UlzYx2pVIb6xmZ2Nqqe4Coujgr9AoCq+6itCTAxOcWV0Rsk92OMT82QjSeIaBI1TTUszkxx
      4851UgdxDg7iFTqaq6hkVOYAkFS62uqYnJ2npWeA9cUFYgcpBsZu0zkWxs7schfVvHAAACAA
      SURBVP/Bc6RQA7m9GJNTc7QN3qx6gqu4MCqTBAuBaR3e+igrKJLAtAWqoiBJErZlYdk2IKGq
      hTmhoqrIZYYqPwvJZBLLslye4GLnbp0oFubbsizX3LwQWMo9z/4xk+DTpPgHJMGS85B/4Uzw
      Pz0SLGxeTj5la3cPw99KA3vsJvP0XL1LX3MNuxsLzCxusLqd5s6lRlb30gRqW7k9OvDaRedy
      Odeqj3eLsaIoJbdHm6ZJLpc7Mw/4EZJgjyfYS4JfyRPs3Q4tPDoeWZIlFLmEJ1j8U/AEywqX
      r94mNPsMf3sX63Nhfno9zNPFOHZjmIb2fm6GwjTsC+zEEoZpcbC6hjk6UKEPVEWlomJ5ozCS
      7OT9NIZ0jHyKbDqDTJavv3lIKmexthajvb2ZvpHb/PSDd2moC1U7fxUXRsX2mXQiTVdPF+Cn
      vUHmu6kNrt26Qc3lSwhhokcaiegy8c0lnkwvMjB6621XuYofISqTBL8lFNsOrarqqSuTSu0O
      LXbLzA9Cgr1bmyUZJLcTqNhZXef8XVFkbFsgnIGxHIGkismaphSiLzvPResq+ZzzqKJb1nwq
      RtZzjNKnYnh1ck5CWyC9x0ciZQlFlTHzlsvGWY6iHsYFcgT71X0K+dxhgF0qEjbzE09Y3IzT
      eWkU+WCB+Viaq3ffodFXiBtaFwmUzuYVUGw79Hme4WJQFMWVhxCCdDp9qpxiZZ8ln0mCneTT
      Q05lWcYWkitymqZCJuWIBu2HdMJ5DlchnxNYjnDi/pBEwhGlORSViG+fyOFaSO57okPXSRxs
      nehEmyT2YydybbPEXsw9AGqbJfY3zTNlTZfQAzKpg8LzKKpEIKKQ3Ds7X39YxjYksqmTytW1
      wM56JUeHFoJUXtDf100+u03CqOXjdy+zsbbJ2sIsz6ZekEjnSudTRRUlULEDQFFk0uk0lmUh
      HS7nCdsklUyTSafIGdWND1W8PipzCiRJYGbZ2N2nvn0An73KJ/eXGLnzDs3+JuqzMo3R0hvQ
      qqiiFFwDYG9vr+jc9G1A9/vJxvaxjBz+UBgpLhDZJDt5wMrwt199hhppZHSwm+zBFvtWkNb6
      0GuVmc/nS0Z69m6HLsSmqcz3CBTeJc49IpIMsmP3tqyA4qA4sgqqjSt4saoJtICDFOugBx2y
      D3wh97VKmh/8YYfsA3/E83vEvf7iTfPKqiah+cA6LEdRwRdw32aj+SHgsPEFwLYEkuIgwQEI
      Rguy6y9XV3d07VCe3/zqz7n5e/8cbXeK+wsmv7hzCVkPoqvFZ02xFw+xW2/RdniHdHZ3mb+5
      P8VHP/+YzZUFLg0NXmC+JYhvrnDrvZ8QDak8e/icK51R9vIyI92NGLEJGobfZ7jFT0CHJ6sT
      5M1emoebyy6hGI4CY52HYtuh3+oA8O7+kNz/L0ugeDq85gjAp2iFznssK4UO7SS0mgYRzSkL
      FMd7wjtAADRdoAU8cvBs+ShND50tS5JAVgTB2iO5UF9/1F033ZGvfNjxbcu5QiXwHQ6SM/qk
      wfTkOC9frjDzbIKFtVVWXz5lYWWd7f0kyytr7McW+eKrh2TyJovTT/j7v/krYqmTHKa+eEBN
      c4iHX90nq0bdBQmLl+OPeDy5cObdvpaRY+LpQ1a3YvjDzbR1tmIkdnn2fJL9jMTW/BOezy6y
      ubJEc88AqlzdClfFxXHmq6uuuZ34zjKK5KdGhe3lWcJXB/mL//DvGProv+P5r/89WUlmLxNn
      byNLn+fSuisfvstv/vEh4UiAR3/352zc+JDfe2cYCThYn+bJXJwGJhiPNnO13fMqEDbRlh4a
      221eru8hZ7OsLCXQI4101AYxsyluXW9hemqWXctmc3Gfjc3qmeAqLo4zB4Dsr0XbeoLd+wtI
      zwGQOdgj1NjC/vYOtU0ttAyO0d1Rzycz37LOAYMOe1+0nZGeZZRImIXFGFnH1ELRA2QOYsTI
      02Lss7yRwc4m6OjuRZUBSSbkk1hYTzA6MoKc2WUhluRSZzOaLGEHFKamXzJweYTWhghXyLO/
      b1Y7fxUXxhmeYJtUKouChaQHMA0DVbKxhIyiaZj5HKos2I+nidbVk0vtY9gS6Z1VHjybBeDa
      +7+gq86H7veT2NvBysX5hy8fYQvoHr7NcEcEAx/RkErGAGEZhMKR47uATSNHNmeg+fzIwiSX
      N/H5g2hq4Q6odCqDpKj4dZVMNocvEHztaVC50aG9TeZdONB1/ccTGKuc7dAlgmkpioLtvSKp
      xBZqr1yOzvF26AtGhz6vDSp2K8Ts4y/YzAfo6Rsg9uIR6BG6Lo3QHA1g7U7z60cH9HW3EDJ2
      2UqbKP46bo9deq0yf2eiQ59TTrHt0EVtHB5n711ecDrqdCm5HJ3jDn/edmiPjXy4Hdq5HcSp
      U5mOMASpZIa8kScY8JNNJ8kaENBlstksif0Utsjh8wdAWKRSGTbW1jFLZ1xFFS5U5gK2EFy6
      8R66nOe7ySmuvfNzlPwm4zNzKJZBT+8Af/hxiG++/oZ3332H7ssm3zycqNCHqaKSUaF9RiKx
      vcrLlR0ujV1jd+0lyztpRq7doD7sIxvf4tuvnlLb1k96b40nU0sMXb39titdxY8QFcsB3gZe
      NTq0YRg/niuSqiT4R3AmGEFscZrJ+U0GRm+QXZ9kcTPD1bvv0hINYGf3+IcvHlHb3seN4V4W
      p79iy+jm7tXXuycYXi06dDnbpX/0Z4JfITDWeeeIT8ll6Hgvxi7WJkieNji6KNsqfsa5Mkmw
      sFha3aWnv4/6iCAjGvn5vRFim3sALE3P0tJ/ic7WRnKJbVJKACVfpcBVXByV+QUQAkmWwcry
      bHKDoFxfSDYS3L//gJAi8Edtpp6PI+U2SSsa+7u7jN7owVd1hlVxAVTmAJBVOlujTC+u0dg1
      hJ5a5pMvVxi7+w4tIwGs9DaffTOOHKzjgw/+CIgzNZlGr8zvWRUVjCoJdiCZTCKEcEWHVg6D
      cR3Btu1TJKuUo6xKgt8wCT58HonDNrBLnIs+pw0q8wuAYGn6CS/X41wavcHW7LckTfU4OrQR
      X+eTrydp6uyjQT5gbuOAaHMPN6/0vnbJpQJfWZbl6szlboeukuAfiAR7z0UrpyPDOetfmZMG
      22Qttkc4HCIY8JHJZghFG6mvKSxPLs0tU1MXJRIJkc/l0f2B6j3BVbwSKvMLIEn4Q1H6BnuZ
      mJrk+t2PMFMxxienySdT1PpkOgeGWJsa5+qdW3QYeR49q94TXMXFUaEDQKGno55nT8ZpH7jM
      xuIL1vbSDF29SWttEDsX58F3T5DCzeR213k2vUD38K1qdOgqLowqCXYgmUwCnHvjixDiFGn0
      OsKKbZl2BsutkuAfkAQfRYcWtlunokmwbTHx9Fu29tP46ztp9aWY20hx7fYdGsI+tpZmmFzY
      IJ6XeXe4lcm5Ndr6rjDY1fTaRafT6XO3AgeDQXw+37l55PP5f3rRoc+x8b4UyrEpJpfSKfYS
      OEWCOd0Gp0iwfqJTmdNmWWHkxrtcH+qgpbWevXSAn9zsZy1W8AQ3dQ9x751r9HZ1sr21x9Do
      GDtrS2eeL66iirNQmQMAQJgsbuXpafIhKxqKpmJl97l//wHJrElsdZ2W9jb6hwbZXlslkc6W
      zrOKKjyo2AGQ3Fon2tqFJIVQjXU++fwZjW1d3Lt3l5AP9jPQGPaRSeyxsx2jpbO/ch+miopF
      lQQ7UGw7tKZpLkKoKEpZ0aGdc05Zlsnn86483hoJVooQWocTS1YOSbDtIcHOiNKaiunYfKho
      CrZpu4mzR0fVi8g5Dwn2udO8snQYHdpyRId2ysXKKbYbVPWpWBUdHVrYzD77jtXdFC29w8j7
      Cyxvpxm98x7NfovdrExT7etFgTsL31d06LdGgoWHBGtgZDze1rSDBOsKwhCuDiP5JcykoyMG
      JcyEo9wQmCnTeUUYUljCPHDY1HjkqIS57667FC2i45RVCVmXsdKHA0CRUAKKu25RCdMRLVr2
      y2CDnXU8T+2JTmUOAASmUGhubkIWcXJyMz+/F+HZ4gYHmXUWEgp3rl+jsbYaH7SK10NlTpuF
      wEImEg6SyWQRto2wbSRFJRIOEwyF8enVfc9VvD4q8wsgyfhli7mFJZq7L+MTK/zDg3Wu3rlL
      g6+RYE4iEjx/Lb6KKsqBiwRXUnTot4F8Pk8un3ft7vT5fK99/zBAxrmDVFEwvSTYk+aVJQlk
      +YQ8SxS4xnk28mFoaDcJVlxXCqmagplz3rMrIyzhivSsaiqW89ohXcVyXG+k+BSsnPuKJMWv
      YmXMs+WAipV2cwAl6E7zypIiIakyds5BgnUZK+uovydfWTskwY4bb9SgipkqQoJPokO/fWzM
      jzO5uEPP0BjBfIzZ1QTXbt0kGtAQmS1++8U4Nc3t3L06xPbyBNtWE1f6Xs8TnEwmebC9hO0g
      sHfqmojqJ+cDYuk4z/fWj+VGf4jrDZ3n5msLm0/WZo/l9mCUtXTSpdMRjLLqSPPKmqxQqwfY
      yhYiUyuSRKM/TMwRqdprE1J1VFnhIO/RkU502oNRVuUTuU4PkrUMMpbhtkl7yzmRWwIRtjJZ
      LMd2g45QlFU945ZTbnnFdyIDdHrSvLJfUQmpOju5Qpp+2Cab2bNtanQ/thAkjJxbxx8HzpkC
      ffFX/5nF3Sytl9/nZruGFWlj+8lX6CO36b9AHP5nX/4dz5YT/MEv7zE1n+D9m+VEbxMk0xbv
      fvgRQSXDw+8Ed0faebG+S7S/hexOjJ5bHzFYL2NlE6zGD7CyQXjNAVDF7x6KD4DcClObEf7N
      v/qX/F//7n9n52GcDV8/YxGJta3f8LJ5gBvdPj7/ZoLLt+6xu/gcO9hAxNhmYUfm9//4Fxy9
      Mzd2E9T583z5YIa+/i6yho1fK829fbrEg88+oaa1BU0P4gv4MVe3uH9/iaH+VtaefcaCHKQz
      mEerCbOzeYBpwxnXF1RRRVEU7y5CgCQhSSDJKpcGL/PBx/+MqF9h7M577M294C//8i9JGxnm
      5peZnJrj6tgVtjY3yaRTOAM0fPjRR7S2deNLr/JsfIIHz1+WrpWwyRsWqqIgSUFEepl/+OIp
      tS0d3Lt3FwULTVORJYnG9m4CijjlWKqiinJQ/Avg7+RS/Rf8x//w72kd+4DO+gT/9Yu/Z7ip
      lia/j2htDZcHrvBoPkVzYxSyvYT9GqFwiKWNNVZX19mxMiCptHa0Yxk2N+9e4y/+9hG+Hou5
      uUK49YBP4iAfxN5fp//mDY79r5JM3/BVemxRcCiJbiy7cHEeQG1LD+80diDJBa9sE5309kIJ
      B21ZaA5EUPQTx5cuu5dbI7qfoejJTTR+RSNt5l1e0ICqe4izREfw5BqTqC9QuILI4Tiq9bl9
      Gl5ZkWUCqn5cH0mSiGh+VEk+00ZXVBRJJqzqZ+p45aCmY9o2eceW4lI2NbofXVZdW469OnUl
      5HJ0NFnBJ6sE1MLfR5UO28TB2er0IDhm6AFVwwai5ol3v853wum+h60QgtjiS1Z34iDrXLp8
      mZrASYc62FplbjmGANr7h2k9w5m1PP2QmbUkfZfHyG1OsxU3js8Ei9Qqv/5shqb2DnprYXJh
      g9buy1zubXmtmh+TYM1Bgpu6XSS4GD5bf0HesSf9XksfAUenK06CD1x5FIjlwZnyCQkuENYT
      Epw40+ZMEuzQaffIZ5Pgs+vWEoiwnUm5SHB7KMpqymFTQi5H54QEF+6a0GWFqKNNitnUaH5s
      3CS4Ixhl5VDne/ADSLT0XKKlp/iv0aYObjaViuAmSKYMhkZHaWmo5dmK4MroVerqCh0xvb1F
      y+Aow+1RVqaf0jc4xMrCMnZvS4V69qqoVFSmIwxobm8ntrnC5tY+ne2txJZnWd+qI7m7z5Xh
      PkKxTb59uMD7N4dZWl4n49hsVkUV5aIyX5jCZm97i63tXQJBne2NLbZ3k4SiTdy7dxdySba2
      tpBUP+mDHdbWlmnpGqjQh6miklGZXwBJ4dLYLY49Bn1drp/r2nr5qK33WP5pW98bK7rOF0Ry
      kGBVKr3nqMEfwnBuf5a8Q7EwXz9CRPPR5A87OTBhzU+j3zpTViWZkKYf2yiSRI3ux3LeTOOx
      8R+SYM1B5L06Ec1Pk6tcH4atk3OQYK+OV67R/IfnbkXZNl65HB1dUfAp6nH7qrJMSNXPzSOo
      aggKixXH9dX9NNuVvB0ayMS3efp8hq7ha/izm0wtH3D95jVCuoKwDSYef4cVbufqYDcHsTm2
      zToudb6+Jztp5BCOu2acxO4sjNS1ldSJO4hoUNVcxPQozavjlDVZQZJO8pElGVVWzrUxVR1V
      lonns2fqeOsiATnLdJFgr45X1hWFuOH2BAdK2JzVBufp+BSVoKofp2myUrh19BwbWwhsBEkH
      CQ6pGgeH3uTKHADCYmZmnpHb7xBQ8zx5meRafx3zqzuM9TWz/XIcrfMql+t92EaK+c01rLwM
      b2AAGLbluiRa8CYWyYRrlci0bZcMYHnSvLLw2CmSjWlb59potoWAc3W8dTEO5fN0zpKdA8AU
      Hp0Scjk6siSdembDWxfhfR4L+5z2r9gBkEwc8Pjrzwk1NeILRAnVhDFjm9y/v4hPypPZfMii
      7WegUaOuuY31uTy2gOp92VVcBJU5AGSV1pZGUpZMzlQxUis8fCQR7R3hxlgtqY15nm0k8SUz
      SJrG7toqm9sKphhCrw6AKi6AyhwAyPQNjbB/kCBUU4diZ4mnTWprIwAEW3oZ8e8h6UHCAT99
      ksXoqP1GwqO3B6MovhNi5ZPdTWQL4fJ4SkgoJV3QPx5PcEjTC9OKSvUEKyr+8zzBHpuAUiDB
      Ud3hCdZPdCp0AEBid4OJ6SV6r1wnG5tmbSd97AnGzDA1MY5e30VPLYzPLtNxaZS+tvrXLrcr
      XHduZLitTOLC26FBuDynAk55ggGXjlcu5gk2/JbLE+y1KeYJLlbOWglPsOTR8cqWsNnOpk4t
      GJxn45XL0fF6gr1tUsymRvMjPJ5gydEGlbl0LkzmFze5ducOrXUhUqbCe++/T3t9oWOuz07R
      dPkWIwOdrK1tMXrrNtsrC2+Erlbxu4XK/AIIQSYdZ+LxtxBsptUn8eCrz4m2dhPf2iUgG2QT
      z5lJWXxwZ4ip8edsx/PYQPWkcBUXQWV+AWSV9tYGcnkTTZNIJXMYhoXqr+XevbuMDPWQyWSR
      FZVcKkEqFaels6fa+au4MCrzC4BEz+Xr9Fwu/quvvoOff3yyoe5NeoJLQZUVItoJoQp6PJHF
      Ibls/Kp2ODfFlebVccqaLBNU9eM0RZIIOORiNgFVQ5Vkl4e2VDlBreA8Ux3e41I2AVUjovlc
      XumjZyxXLkdHVxQCinbsdVdlmWAJm5CmF463OILn+5UTncocAIfRobfjOZq6BumqsZhY3OfG
      9VF0RWJreZbJ+XWkQB13Rzp4+nSGS9dvUx+8WACrYni+uwbJk2ZpCkTYchDN4doW3mk+Y6vr
      IdZSB6yk9lx5uJZ8xGkHm3D8+yxZHP67IEvHqWfZIARCOl+nqE0ZdXHJwv2L96lOpPPlkjrC
      2Q4nJZxnIw7b2qUjAVJBrswBIMlcuf4O2YN1FvcsJl9sMtQdZWZ5i7HeZho7L/GTtk6eTy3y
      cvolwzdvMP18nLo7N177koyUmceW3PtcnCsIZhnHJ/K26bLx5hHxyMV0vLImK6iSfJymSBJ+
      RT3XxhYCVVbO1fHKqqScWgUqZRNUdRJGzrUKVOqZvb+XU46hWK4VHU1WUBxtUsxGQjq1CuTU
      qUwOcHgRwsLSJr3dUQLhRmob6rCSu3z9zUPSOYuDzXWize20ttTz+MEDNvcS1fDoVVwYlfkF
      AHLxDYi04lcC5BLjzM748Nd1MzocRVFkFrZTDF3tw0xa9HcLlneMKgmu4sKo2AEgaTUMdPkA
      hbGxy6zvZuhsq0eVJYSw6envR5MkLEkiZ6rcvNb/Rspt9Idc26Fr9ACm49Puk0sPs5DqoyUQ
      OTOPo1g1znnpaR23XCB8J0G6ZEmmRnNHx/Pa+BUN+XCqVG45he3Qlms7dCmbqB5AkWT3FKiI
      jvd3r+PMm+aVNVnFpyjH27tVWSGoaiiO89dem4CqI4RwbZt26lToABAc7KwxvbDJ4NgN5MQ2
      q6txGluaCamQtyEcLpx89odrGQjXvrGS93IZbPtkvtgVrqM9FD3H4jSaAmGaAif7/20hmDmI
      HcuarBx6L0WRNIeccctR3XZ4gmWEgE2HjiorxDLOwFiFAbOfc3iChcxCPH4sWmGZlwcnntOm
      QJCEYZB0nLDrrYGZvRNSPxCF6b3dY7kvGmXpIE7esY12qE4wuXuic6Ve8Hx751geabAZ3z75
      /ShtYmf3TDmia9T6/SzHC4sSAVWlNRRk/iDushl3lNMcDGIKwZYjkNdoo8XTzYJOZQ4AYbG8
      vs/NG1eYWXiJnYWbg03Mre0wVGcws6tytb/1eynaEja2eNM76oRridAW4tTbr5Dm1TmR5cN9
      7SdpNrawz7WxhA1CLqnjfFNbQmDaxdNO8rBdsmULDNs+X0fYrkNDlhAuuViaVzZsG8s+yUe1
      bcwSNqawMW2PjkOuzAGATE1A4tvvntLS3YGJRiAcwtzY5OvpWVbSMuHAT+hre3Nv/ip+N1GZ
      A0DYJFJZwuEg8aSJnt7g628FzYPXGOtrZjUp09NS7fxVvD5cA8AwjFP3274tDI9dJ53LEwiG
      kO1O0jmLUCiADbTV4bpy6E3BNE1kWyAct6OYhkH+NdeXBALJkaewLGTLdrlvhGWd0nHKkpAQ
      5kmaJMkIy3bbmB4byQYJZG/ZzqmHZaM4IkFLto1ie9IsC9XZLyzbJcu2hSaEKzq0ZNuFtOM8
      vLKF7ulrsu1O88qaECi2fZzmlY9tnPcV24V6OdNk2z6WXYGxEolExYQYTO5uML+6RVN7L1Et
      x2IsycBAD5osgZVhYuIFSriOob5OcvFt4naQ5te8MSabzZLL5VxXIvn9ftedYKZpnrrvq9S9
      wVC4f/gIxa42epU7wkpdmVT2Rdmee4JtIRBOG01z6XhlRVWxTdM1oFVVxXCUoxWTPaH4vfcp
      e2VZkpBKtIHXRpFlhKcNnGW7vgCRyNHSXZ7nz14ydnWA589eMHZ15FjnyfNnXB+7yvcLwfbK
      S/qHx6ir8TH56Dnt9QG2UzZXuhowNtdQW4e53BqkJqjxZH6ZnNnHUG/7a5WaTCaRZdl1SV4w
      GHTdF2AYBhlHSHJVVc89PwCFO8Kcg6jYxdml/vjldPhTHabIRdlFy/EMaO9F2Zquu3S8sqpp
      mJ4vsqbrrheFXkzOuT3BRXUcsiTLKLJ8/MySJKF4BrDXRlGUwgBwtIGz7DM4gMGTJ+OMXe3m
      yZNxmhtDxDZ2aOwe4vGTJ/S3NZNXdXZX1khaKldHeph+Pk64bQDdSlNfF2ZjN0ttQJBJm+we
      7KDXtDHQ1VT2VgUzl2V28jm9Q734Iq1094Z5MrvL1PQejT7YXZnkRa6drhpo6h4gtlAZU7cq
      flw4hwQfdSiJ+5/+DX1XbvHpF/fJbs3x//71ff7g94b54ut56sU6sZ1e9GAL43/7/xH1qei9
      vUyMr3O5ViAZaZSROyz83Wf0/ev/HqWcESBs6jsu0a4LJhdjKHmD2FoaLRSlKeJDsgzeu9PF
      82fjbOcsNhfixDZ9jNzowV91B1dxAZwxAHxo1j6ff/opekMPcjpDe3s7M8sxfA3dtIdybB1k
      qKlrotHaJ63qHOxuYaBy8+4l/rc/fcKHt9pZSUuMaTmCHR1sKFMFjiQB2KyurFJfG2I/o9DW
      5HE0STI+xeTF4g6jI2PI6S1erCe4crkVTZGw8inGn0/TO3iFjqYoI+TY3TXfSOf3XnEqea5H
      OpqKHKHUncHOfJ02TrlYmlc+4gBHaUf1cC5aFMvDi1LlHOXpfO6SNrIMquriALIsozimjqVk
      AFlR3Dpe+ZADHJVctA08NkccwPU8Dp0zBoDKH/+L/4HNvRR329owMpfxB4L8/s8+wrZtgrpC
      xhT0tCqoXEEJBNiNxfDV3KM2rPK//psBaiMqKVMnQB4pGKLjTz7mi7/+FdsZG3+4hTvvjKKo
      OkF/sQ4kYRlZEvF9NncOCGR32d/eZrOlnY6GELJkEU8kyK7HaPAbPHk6y6Vrt4o/ygUhhDh3
      JUxVVRcnAEilUi6bYDB4qvM5fy9WhjetlM4RrzjPxqnr0nHM74vZ2CXqUiwPy7MKVLQcxzxc
      KIrr9zNtnM41WUZ2pkkSQpbPt5GkwhZvT9lHnODMKZA/XEv34RYDX6QGgEj4xL1/sk5SiNjc
      2nFyMLy5uXA4vbD7okAofdE6fvqH//xUObr/VBIg2N1LcueDjwip8PTpMh999NHxr8b2Eo0j
      HzDcpDLx8AGjd24x9WyShjewHdq2bRcBLGdZ2LbtknrePO0if/zzdKTDHbLOtGJ19ebrtSmn
      nFI6wlOubdsukllOOd48iqV5Zenwn6M0SZKQStkUeR5nu1WmIwyQhMGDzz+lpfcKipHg008+
      ofvSJTaWN7jUWcfK9BdsheoZ62zi8TcPiGdF9UxwFRdGZZ4HEDa+cB1d7S2kk7uEalrpaKkl
      mdO4d+8uuj9Ib3cXwsiiBcK0t9bT0NRc7fxVXBiV+QWQZBobG9jeTzPW34qZ2mMvFaG3pXAL
      ZE19A+n8JteujaHLJnqgllv9pQPUVlGFF5U5AJDQ/QEUKYVhWui6jpyxj/fCS4pOwKdi5A20
      uhpaGyCTzaOHXv/2eE3TXJ7gclZ5wg5udF6+R/CuAAGniLVXPloFOlrN8MrFbI7q7nyGU+Uo
      Cui6y8ZLer06qqIUbu52PI8sSa5VIEVV0S8gl6MjHT7v8fNIEvJh2WfaKEqBBDs4gKKqx+1W
      oQNA8GL8KUagDl9Njpnx5+i6QtJWGWqvIxN7wfiqQU+HBphMTn5D0hrg3t3e1y7ZMAxXB9U0
      reQg8C6VnpXveXIpnXI8wV6bYp7gouWU8ATj8fx6ZVHEEwzu/Vp6CbkcZITDBQAABcBJREFU
      nbI8wR6bop5gKOUJfsuwDbb24pDIEarxoUc6GL0U5uncPhuywfbKDrJhsbnjI2gniHb0Ya5U
      o+JWcXFU5gCQFGqi9fQPD/JsfBLV1kjsWyi6QjqdIRr0E267zPb0UxYTGeK5DLGtqie4iouj
      QgeAzOClLp48fkb/yE18uRiTS3Gu3xjFr8oIu4OJx98RaulmuLcVScoSixlvpPPLsuya8pQz
      vSk3X2ee3mmVN62Y7E0rVlfv76XKLmZjC+FaHixpczgXd22HLuN5TrWB93mKyM60ozxK2oC7
      bg6dyhwASKi6n1AwgITAMGwUchwkc/hrAyApRCIhsrKEkY0zNTVPz/DYGyk5GAyeu7vTNE1y
      jl2MiqK4do+e+USOgXTUmb2/n6dzJDtJcLk2wtMxT+l4O5AQrhAzp3SK2Xi80uV0ZtmzGOBN
      KypLEsKxHaSUjXdgHuucvxXiLeP/b+/cntq2gjD+s45kGVsGY3NJuIVQrkmapEk7afPQP7+T
      dtJJhkkIhDYQKBAuxsZXWZZ8+gA4kqwgk5AZPeh78p7Z3XNWczTy0be7kh3W37xl5O4yRkpl
      Y6vEysoKydT5W57KzluKyigLI4N82Fjj9t05Nt+94+mTH7+ZCQ5dmpSeQ2W/Twi3jTuv/0tj
      fvlyHr/dVTaXOT1X6QStxX8I7mdt/sO4IoTXJkTuRyfR6SBdY0HXxG8jzwPqjedivRG9AWzO
      KlXKb19TmF4i0arw8uXf/LC8xOlREadRoWGXeV3KsTBqsLb6hppJzATHuDaieQMkVPKFArnx
      W+zuf2JyYpFbssJ+qcX87AzWSYJDkae695H0yAr3BzK83ynHmz/GtRHNVIiEwvziPOViieWl
      +6STDicNlXvzU2SzBvnZJQyrxMTcAqrd4tNxlceP7oX7jRHDh2g+AaTE7iSYmp5GFZJMYRzN
      sNEuqmlsy2J4fBIUgZ5KMnsnRfKGPg9pWVZP7ru/pjaM+bVtu+c/c2SZ4ACbHiY4xEYI0XMI
      DmSPr5D70fG/CeteA3d8Acw2FyneHp3L30QRssOn/7Yplko0RIFB55SG5XBr8TFz40PUSkds
      7R+xc1jl4Z0cxWYHRR/i6YP5cN8hsCzryvpdf8FMEBzH8bwpCqoBjhQT7IsvKK36KhspZc86
      wmyC5DCdfhoD+G26N4Cf2Q4qio8MFMHdxQeIjVWM6Un2P2T47ZHB6naF5mCSobFplnUNo6CQ
      qO1SqzVoFBvYD+YjGlCMqCKaZwCgY1UpOxnyaZ2WWaVZr6MobdbX/8FsO+zvHzMxMcrM0mN+
      f/4L+Vwm3vwxro3I7plmvcXMnSlAZ2Y8yavNEx799BBDV5HSZiA3hqEpVI73WF3/yMLDn29k
      3ptifr83gsi0m/J73eZoQYTb98DXxBym72mMFSWY9TIHR2fcnpom0apwUGowNXkb9YYOu0Go
      1Wq0220Ps6vret+F71+ClBLTNLuyCCCB/GNCiC5ZA5yn/iqKJ6uxx0ZVcdz/mRUF6TgeHVUI
      WvV6V9Z0HdPVLVrTdexWy+NHNwya5XJXTg0O0nR1fk4NDWGenXlSjlO5HI2Tk66cLhSoHx11
      5czoKDWXfDlWPz7+oix0HS2VwrzoZi00jaRh0HR1rvb7TWYySMfBcsVsjI1RPTj/1nM0nwDS
      Zn3tPbmRPOubmziVEtlMkn+VFHPZNtsVwcLUyHeZ+mvSofv1e5UcphN04JPgSQX22yiKQse2
      PTpS0zCrro9rdzqeDeQYBu1aDdvXtMq9ERNA9fBzu3cpJfXDw5664Mre3ue1CMHZ7u5nHz4Z
      QFFVz5hf1tJp9GyW2sXcQtdJ5/PdzdydZ2enKw8MD+O025iuGBOKQmlr61yfSEKQTSX4sL3L
      QEZDz06wuDSLeXrIiz/+5OVfL9g6KIe7iREjBBF9ArQ5bSo8f/aEV2ubqI7grNhGZAs8+zVL
      7lSNW6PHuBH8D8pFvbQG+d4zAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      +gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      +Irwf6GJhoMc7/XiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      QJS1/wfNCrcerRE5XgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      FzX/P16YCGYTamRzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aXBcWZaY970tX+6ZABJI7CtBEtzJYlWxyOrq6q7eNN3T4xlJM9NaRiN5
      HBMKyeGQLMty2Ao5JI9DlhVy2GE5HJLsUcxI09LMWDPqWVq9VHV1dbGqi7VxX0AQIIh9yUzk
      nm+9/vESCSSQ4F4sspBfBINAvvvuey9xz7vnnHvOuZIQQtCkyS5F/rRvoEmTT5OmADTZ1aib
      f8lkMliW9WndyxPHtm1kWUaWm++B3Yq0m22AXC6Hz+fD7/d/2rfS5FOi+eprsqt55gUgs3Cb
      t8+eI284AFilLOfeOcv0UpZyboWfnn2b8eklSmtLnH37HZaz5U/3hps8VTzzAnB7fpWTxwaZ
      uDkDwPzUFINHnmN5dhJHqBw7eZJyeokbU7McP3mYmampT/mOmzxNqPdu8nSj6Tr+YBuKswSA
      LVQiIT8BVcEXDDA1fpOekb0szEwQ8IfRZBvXdXEcB8dxsCyraQTvYp55I/jyB2cpO4Jw5xid
      ERkrt8DNpSKSFiIhrbFq+2lrbUcpL5Mu22jhTo6PDQBNI7jJZ0AAHMugUDaJRMLYpoWmKRQK
      BfRgBGGVKVVMFM1HOKCTL5QIRSKosgQ0BaDJZ0AAHoWmADRpKr9NdjVNAWiyq2kKQJNdTVMA
      muxqmgLQZFfTFIAmu5qmADTZ1TQFoMmupikATXY1TQFosqtpCkCTXU1TAJrsapoC0GRX88wn
      xIyf/ykzy1mGjp5hOBlmbeEWH1y5Tbijn/1JnYsXb3Psy69QuvYBHy+WGBrcy/6hzk/7tps8
      JewoAOd+/J+oSCH2HHqOoFQhFApy+eP3SQweZOnWFQaPvEAirD/CpR1SqznaEi2P0AcYSpDX
      vvwcFy6MQ/IgqdUSL33xNSYvXiCSHGW0r4QA1nJlWlridHa0IoTAcRxc18W27V1VCqZJPTsK
      QCw5yMnRYT66cI2ezlaKqXkm5laxxVVuzabpHc3x/uWbdAyNEXSLLKzk6U4GGZ9c4tDxw6zc
      mmAhW+LIsWPMjV/ADCRJ+itMLZU5duIIAdWlWCjjlFNMzizTNXKAgWT8gR/AdRxsuwKyDwBZ
      crFsG1vU63f9B4/SZRlcuXKVl54/iqIoyLKMoigoivLA123y2eCuKpCsqEi4ZDMpuntHOHYi
      Sn8iRDCeJzd1lXRZUJy6TZts0HPgCBff/gHoQaZnF7ENHwdGWkhPfUwldoDDfT5+8J3voIdC
      zGf2MdIOqdQaId3k4JGD3FnIwEMIQHvUx9tnP+bgyRdZWliio7eTj959m/aBMVKzN7k0OUmw
      bDMQVbg9t0LHwH4kSaqdL0lSMyd4F7OjACxN32BxcYGe0aOIwjySLKEoCpIkoyoKrZ3t3B5f
      Jh6PE1ZcYiE/HYlWlosSsagfQ/hQNQ1/aw+5ax9ysdxPWyJORQoS8cmAQFVV9KCGrmn4fNpD
      PUD38EG6h6u/hJMAfO7zyeoHSb7SO1pr2zcy9lDXaPLZpZkS2UyJ3NU05/4mu5qmADTZ1exo
      A5z94R9hq0E6h48jF+cZ2HcI3xZxySwtQChOSzhQ+0y4Du+//TpSywhDbSpqvJt4sLF+P331
      Y1ZFjOMHh5uS2ORTYUcB0PxhEq2tyAhMw6CUWeDc1Qk6h8aIuGluzqTo6uzC76bJZTX6ezrw
      fCsOshYCM8fKmk5EyRELtFY9L4LF2ze4OZNieGSQD6/dYmj/iSf1rE2abGPHF6/q0wlHY9hG
      CYBCdg3Ldbk5fo251QqnXnqRqGrwwXsfEW5tY92xKEka+8b2EwkHMSoV5qdvY9bMbJP5FZNT
      zx9iYbXIgYOHm2//Jp8qO3qB3v3Rn2LJAToGD+MzVvGrcHMhg+4P0ROBqeUC/X2DRGM68zNL
      RGNBbNtF8Yfpjuss5hzIzjC+anNwMEHJcJBVDTO/yvxKjr69h1HMPN3JVuYXV3AFtLS009IS
      eWIP3/QCNXk8blDHYmFpCdsRyL4gPcm2usOppTlKpoukqCSTXWibFl6tSpGllTQCiEZbicVC
      j3w790tTAJo8E+sA+dQShqSj+nTimwzuR6UpAE0aGsFGboUPL93AFbDn0Ek64zsPkPzqKr5E
      Al0IFu+MU9LaGe5ufYy3WOZ7f/x7aPExJDnAN3/29GPsu8lup6H96YskGNvbS0fnXjqiGqnl
      RTL5EnNXLnJxcpJSucziwjy5ksHq9B1KgFXOcXVqgXhIIZ/LkSsZrKWWWF3LY9sGq0uLpNIZ
      FheXsdwHmXRUotEg4xc+RGl7tMjRJk220nAGkCQJRfF2T8wv3WJiwUaUp4gGfFQkg0ohzU9/
      8mOk1j0cbvG6EK4NgFWY471rBY7vizI+b6GbWdpHukjNFMkXV+iJ+cipcfYmfPd5i4KWeA99
      e0O0R5uqSpPHyz09kMJ10fxBNFmiJdGKXw+QSacZPfwcUVXgVtv5gjG6e3poj4UZ3neIRNiH
      4guiKzKuotE/OEJ3dw/7hrtwXemu16xH4+jpV/nZr7xIamXt4Z6yyUMhhMB9yk1EIQTuA2kU
      9ey4EBaMdNATUPDrcZL2HZTOgySjPsyZeVp7BllZXuHwkTFCmuR1Iin09fQg6TJ9qoaiD7Gn
      fRpL20+yNYgQGuFIP2gSfeJB4u9NPvjx6yxkc8T6jj70gzZ5cJYyRb5z9ga/+rVj+LSnM2fi
      /evzjM+k+EtfOfJQ5+8oAKrmR61GMPQMDNc+HxgaAiAS3uKvlyRCwSAAwep3lewdrGvi83nH
      79fRaZsp/r/f+gPy1d8jPe62NuPn32VmOcfg0TOMJMOsLUzw/pVpIu397O/UuXjhNse+8gr5
      mxe5Nr1EcugQh0e67vMOdjfXpld48+Pb/NyZfSRbw5/INYplE92noioPvhxaNix+63sXyOQr
      /OIXDu4opIZl8/qHU3zh+BABvX7IP9U5waqvjV/6tV9jaXqcW3OrtHRu9y4ZSojXvnxyU0pk
      mdObUyL7vZTIVEXitS+9xsULlxGis5kSeR8spgoUKxbZQpnWyKOkvzbGtBz+p39zlpcP9fKV
      54fvfcIWzl66w8paEQmJhVSO7rbGQjo1n+Ff/vFH7OmJM9RZn3S1owBYloWmaayurJBob99+
      vLjKu+euEGjr4sThvSh3UesNw0DXH/YLLPDG6z8E2sjZIcaG69/eO6dEinoDx3WwbYv1T5sp
      kfdmrVABYD5VZE9v2z1aPzi3ZzOMz6RIxIL8mVOj9z5hC+cnljh9qJ8LE4ssZUr0dcQatrsx
      k8Z1BUJI2/7WDQWgklvlR2+/x4Hjp8jM3GBpZY09e4dZW5wm7wYZ6e/EsQv07X+BYPYSk6tl
      Wt0Uri9KfmWOYKKXgOwSiwbJlWxSKwv0dia4OTlLz9AehFUiHvazVhSUMnMURIi9gzupJTp7
      Dhxl+sZFTHu7sXO/KZH7kzHOvv1Thg4cb6ZE3icra14c2Eq29Ni/IyEEP706iyTBYroAkoQs
      3b9zxHUF04tZvnF6lKV0gTvLWV4Y62nY9vLUMgCG5Wx7joYCoAUidCSTJOJhlm9DQi5ze3GO
      q2+/hyOrxNr/PBHH4dIH7xAJ6YwE57m5UqIrtMSHl6fRAkvs6WvB7GqnZPvJrGXIp1dI9vUx
      fu0myAbP7+9iYqpEfvkmbQMHEcDWx7fNVf74P/yYwaPH+dLPHyES3j7FPUhK5KvdQ3f9Upts
      4DguqVyZoK6xkMrf+4QH7d8VfDS+yKkDvYzPpCiWTSJBvXbtH318m6N7krTHG1uMJcMiXzbo
      TkToaY+ysNr4HiumzXz1WNnYruo2FGtF03GNPOlciWhLgkQ8iiSrtHX2cODwIc/IVRQOnzzD
      F774MiFNZ3hkiFAoRHfvAAf2D7NnsI2Pzt8m0e4tXvlUiYWFRVA1qOS5dPUGFaHS05Vk7uYE
      lQb3ofoSfP3nvoJUWORPfv+3+faf/PRe32uTx0TFtCkZFqN9rTsOrkfq37BZyhR4+XA/uZJB
      vmTWjmUKFX7rexf4o3fGdzx/MV1ACOhORBjuijOznMN2tjtJltIFMvkKIb9G2bC3Hd/RBjh8
      9CSW5KOzdQRVlhhGpjcawrAlAhpIai+9YU+find0giQjR0c5FMkhqX70kJ+XT7cSVCUOHjyE
      Jktkc0VC0SjC6qZsOoz6g9hGjOSgj0ZLXI5d4I0//S7LZYv2wSMcO3bobt9pk8dIvmximDYH
      B9v5/vuTj73/1VwJXVPpT8awHZdc0XubA6SyJXJFgw+uz/MXv3wYXds+TBdTBVRFpiUcoLMt
      TDpfplSxiIbqbc3JhTViYT9+n0rFfAAB8IcidYNSBdRwjOD6B5LKep6Xomx0E4tvhCuEQl5r
      3efdVEtrdfVXDaOvx7TpO5dCkWSN01/9OSKPVICrycOQKxoYlsO+/gS/9+ZVKoaNf4sL0bId
      Lk8uc2i4A019MEfCcqZINKQTDer0tke5s5xl/0ACgLnVPK3RAKvZEjfupDgyktx2/uxKjr6O
      KLIsEQv5qZj2thlACMHFiUXGBhLMr+YxrO0CcO+VYOHiutunlkY4tkWlUqFiGHUriBvnexXZ
      tpqyrmWQWsttvzlZbw7+TwEhBOl8GU2V6YiH8GsqmUJ5W7t3r8zyG7/9Ey5NLjfsw3Zcdgo2
      nl/NEw3q+HWVrrYw86v5Wttbc2nGBhLs629r2LcrBJMLGQarLs1YSKds2Fi2s63djdkUY/0J
      dE3FsJxtfd1TAMrZVcYn5+/VDIDM0h2++4ff4cOr4xibPDbj4+u6nMPl81fYKk5LM7dw1ccX
      5tzk0RifTfO7b1yhOxEhoKv4NIW1glHXxrBs/uidcQTwzuWZbQM9XzL5+//qDZYzxYbXWM2W
      aIsGUBWZ9niIlbWNdlMLayRbw4wNtDO1kNkWjlEomUzMptnT460L6T5vZtqq4qxmSyyli4z0
      tKJrCsb9q0A25999hxVL54UDA4DLxXM/IVWwGTlwhOmr5zBsnROnjnPl4wtUHMGpM18g0TPC
      /tEcA8cPU5mf5N1rk3SPHiO/Osdbb87RNXoMgLX5SS6NT5Po28uhkR6W8iZHhx+uMFaTx89/
      +PFV4hE/f+1njuP3eQKQK24IwGq2xP/++++RyZf5s58f49y1OWzHrVODZpazXJ1e5aPxhYY+
      /oVUgYFOz28fDelMzmc2zl3J8bOn92K7LmcvzWA7Lr5NfY/PprBsl4ND3vqUJIFPUyhW6r08
      N+6kaI8H6WgJEfJr247DTjOAlWet5JJdmCdvOUAJgwQvn9zDwmKO7uExnt/bzcJKlqGDxxlo
      D+FsmelW02l8isP07BLhRA9nTj9PMeVNZ7dvjmPLGnZ1BVYId5sLtMknz8RsmrcuTNe9vW3H
      ZWY5x+mDffS2R9E1FU1RWNukAv3BW9ewHZf/8a++ypdPDrOULjKfKtT1vZD2fn/r4p1t13WF
      YHmtSLLFc2vHw/7aolu+ZGDZDl2JCP0dMeZWcuSL9bPPTy7c4fBwB7GQZ6Uqskwk4KNQNuva
      3V5coz8ZIxzwofs8FUjUqeZiBwFQgkRDGj1DQ4SDIeKxJMm4xXuXFxgdThKNRPBF4nS2tzBz
      7Ty3ZtOsr2G0tCdQgXgshuKPMdDVhs8p8s65qwyMDNHW3sboocPouASDntoTVlVKWyWoySeK
      EIJ/98ZlfvdHV+pUh0LZpGLZdFU9MrIs4dfV2tvTMG2u3F7htRND9LZHCQd8tMUCzC7X23Cz
      yzmiIZ2Z5WydegNQKluUDYtEzPv765pKqdr/YrqIrqkE/RqxsJ+WaKAmTOCtEVydXuGFsR5k
      2Rt0siQR0Ovf8EIIbs2la3aCrimYW4xg03J2UIFknROnztR/1t5C/971XzzvjlbJ4/NpDO3f
      S7Rqq3b293nN+0Zp71uf+joZqf7UEvJW6z73ysaq3cBQDwtLGQYeayZZk7uxlC5yeWoZ23Yp
      ViwCuqeCrqwVqRg2PYmNYMd42F9TgaaXssyu5DhQVT8CukY87GcxXb9WsJAucOZQH9NLWf7x
      vz3Lf/+XP0dr1BvwK9kSJcOisxq7k4gFajPAWr6M36cS9vvQNYWOeIhbc2kODXUA3gKYaTkk
      WzcWyGRZIqCrlCobM0DJsFhIF/jZM/sACPp9FJeygPfmd4WgZFiPVpFE9Ud47sXT7B/qeiQV
      xhdqaw7+J8zZyzOEAz7iET93qgMDPP3e71OJhzec4NGQXnu73ppL090WobMlXHc8nav3Ei2m
      8vR1RPmvf/ElTMvhxxdu145Nzmfwa2pNBVr38xuWw0q2REBX8esqiiIz2tvKjTup2rmZfAUJ
      auoPeAIQ8vvq7JR0rkyhZNKbiHrX8CmYlueBfOOjKX77+xcplM2dBcB1LHL54jaX5b0QQrC0
      MI/zCEkKTT5ZXFdwbXqFV44O0NUW4dZcunbs9mKW3vZoXftYUK8NrouTyxzZk2Rz2E5rJECu
      tDH4yobFWsGgryNGIh5ksCvOUtpTg4QQXLy1yEsHe2sh0H6fiu5TyRYqrBUqtEYDtbigzx3p
      59LkEtOLXjJUrmSABJHgRkahLEmEAxr5TTbAzHIOWZZqM4WmKphVN+n71+d5/cNJ3jx/e2cB
      yK3c5qcfXMF+wIEsSaA4FZYyhXs3bvKpUDIs7ix5A32oK85E1QMjhGBuJUdvR70AREM66bz3
      hp+YTdPbHq0LKGyNBljOlGq/p3JlpOrn68ezVQEyLYfzE0vs60/U2vt9KrqmkC0apHPl2nkA
      +/oT9HXEeP3DKW99IuepSCF/fUqtrqkY5oaff2phre4+Q36NUsXCcVzSuRL5kskfvHV955Xg
      xeUSw90h1kplFq5+TNZWaYv7WVkp0JmMMTe/gh5pJ0qK6TScPjHIG29+zP7nXuRAZ5Rri0W6
      255ckasm90++aJDJVxgbSCDLEu9fn8etphYurxXZ11cf+hwO+DBMm+VMkVzJ4MBAfXh8ezzI
      WqGCEIKyafO7P7pCJKTTHvdsxXjYz/iMp8ZMLa5h2Q77NwmArinomuoVWciW2Lsl9PrLz4/w
      hz+5hmW7ZIsGkaBeM4DXiYX9TC1sEuTVHPv6Nq6hyjKG5VAxbQoVi5P7uu9iA4gKtyYmmL0z
      yc2bc5hajJdePIHfp3PihReRbYMjz79EmDKt3YN0RlRyto/9+wYprKXr3g6fNOXsCucvXMOs
      zlSuXeHqxfOk8gauVebyhQukCwbltSXOnTvHrdmVJ3ZvTyuLmQJBv0YkqNMRD1Esm5TKFpbt
      sNIgrr41GsCwbK7eXiEW0mmN1C9axkJ+bMelUDZ58+PbjM+k+Ft//lRNt49uVqEmlhjpaSUR
      qwXVEPBrBHSVlbUia4UKHS31EaDxsE6+ZOK4LsuZIh0NIkRDfq3mBnVdwVK6SEfLxjWCfg3T
      cigZFoWSyV/88mH+wa9+vvEMIMwKJ1/7Bsmoj6XlZTS3xPsfXGRozzB+TWZwZA/nL3xE++AY
      up3CkP20RYIsTxVoHxgjs5YnFnkyJUyuj9+iv7+dKzcWOD7WzfzEdQIdvYxfu0JHSKKls5tb
      N8bp0B36DhymTW8uuE3MZehPxghUjV1ZksgUyp4hWTLqPCzgqSiG5XD9zipdbRFCgfrvMBbW
      sWyHbNHgrQvTnDncz3D3xt+/JeL5+V1XcHFyicPDybo3uCxJBP0aq2tlKqZNPFIfGpls8YLd
      LNslky/T2qA6yLqKA2C7LstrRXo22TIhv0bRMCmWLYoVk2RrCL9P3aEsih4nWXVrJpNeINJL
      XZti6dUYz59aL1DVQqLX++mF0y8jhGBhrkgyWa9HflL4gmHaksPML10CujFsjZ7OBKXlBSxZ
      ojfRQWF5CROXqY/O0dG7j/2DHTiOg+M4WJb1mU2ImV3J8ZOLM5wY7WRf/4ZaMb2YoTcRxnFs
      grr37EupPH7d878rksA0NwzKkO6FEZyfWOSlAz3bUkhDPgXHFcwsZZhZzvLnPz9Wd37AJyNL
      cH16mTtLWX7x1frjAJGAj7nVLIWSSTSg1R2XJUFQ11hMZVnNlhjpjm87P6ir5IoGpmmSyVco
      VyziIV+tnYSozgx5gn4NSbiYpvn4c4IlSaK7t/9xd7sjVinP3PR1XL0dwzAI+Gymp+fIGQ6d
      GszNzZAzFfq6WzmU7OLm7WXk4c5aOqSmafh891uj6NniD96+yblrc5y/tcw/+xtfQZIkb4Fo
      fo0/9/kxfD6fVxpSV8mWTLIli0QsSCwSxLcpBDnZFqVk2FTMIq8cG9r2fbVpmmdL3FgkEtQ5
      OJzE59s4PxIKIMsyFydXQILRvsS2PeG8cIg1DMuhozVSd41QQBAO+Fhaq1CsWLREgtvuIRYO
      VDO+VFK5CpGQTiwcqLXTdR+KLDO7WiDZEq79/sy/+vaP7SNf0Tk4mqRULJEc3o9q5Dlw8CAD
      o/txymX2HdhLLBxgeWWNg4d2z0Z5E3Npnt/fTb5k1Pz4a4UK+ZJBT2Jjhk62hFnOFJlP5UnE
      gtvi7zVVxqcqPLevi8HO7Xm3kiQRCfh4++IdDg8n8fvqzw/5PQH54MY8h4c6aotu9W18zK7k
      qrbJFg+PTyUS1FnOFCmUTNpbttsAqiojyWDYNjPLOWIhvc5TpMgSiiwxv5KjNeKv2alPdVWI
      +8EfbmX/Pm8RraXV0ztH9u6vHtUY3bev+nMbBw48/sTup5WyYZHKlviFz+3n4q0l8iWDcMDH
      YrqAIssk4hsGYns8SCrn6d/r4QmbkSWJX3hlP2cO9+/o4PjmmX1kixW+fmrvtmORoI4sSUzM
      pTl1oLfh+Z2tYYQQ/BffOLEtN9inKkRDOlMLGSqWTSK6/R6DuoYqy+RLJitrRdrjoboyKZqq
      4NMUJhfWODDYXrvGMy8ATRqzkCrg96mM9LRi2g65okFXW4T51TzhgK/Ok9PZGq4KidmwPIkk
      SXzrS4fver2vvbhnx2OqItdmhbGBRMM2XzwxxGBnvJYUs5WWiJ+zl2ZoiwaIhbcbwS2RAD5N
      IZUtcWc5VxfKAaDKEooss5Qp8M0z+zY+v+tTNXlmmVnOEgr46G2PEtQ1UtVQhcmFNQaSsTov
      TFssUPPPdyU+mbWbtmiAYtms88xsxqcpOw5+gI54iIppMzbYjt6gAFYk6KM9HuL8xCJ3ltZ4
      7bn6AgjrM4AsSRwb3cgwawrAZ5TFdIFki6cGJFtCLGeKuK630rt5FRYgEQuSKxrs709wcHB7
      DajHQTzix3JcwoGHczi0VdWeoyPJHdWwoyNJ/uidcRzX3baYtm4DnD7aT1t0Q/1rCsBnECEE
      UwtrtQWtjpYQC6k8FdNmNVviS1tCHbpaI7RGAnzrS4ceOLf3fnntxBDZovFQJRAB2ltCxMP+
      bQN7M/sHEnz79csc3ZOsC6cAbyHs175+grHBeuFvCsBnkIppM7Oc5cxhzx3d0RJicn6NG3dW
      Wc2WtoUyJOJB/vnf+hmC/k9ukfDons5HOv/wUAd//1deqYVQN2J/f4JI0NewQJYkSZzc373t
      86YAfAZZyhRJ5yscqsbst8dDfHB9nh+dv83RkSSxBoUGPsnB/zhQFJk9vXcPmdc1hd/4tS9u
      C6W4G8/8OkCT7Xx4Y55ELFirkbO/P0E6X+GdyzN86eQwymd05VuSJAY64w3XGXaiOQM8YYQQ
      3oJOxWK4y0vXe9DgQSHEXc+5eGuZ43s6a77uvo4o/9OvfYGJ2XTDGju7maYAPEGEEPzxO+P8
      zg8vA4L/5ltn+PjmIp870s/evvtbpMsWDf7wJ9f52gsjDWv250sGE3NpvvXaoZqQSJJEX0ds
      x+rJu5nP5lz4lJItGvzuj67yl796hCMjSf7Xb7/DDz+c5J98+yxzq9sLgzXi7KU7/Me3r/M/
      /5u3KTUo9vr6R1PEw376k83Bfj80BeAJ8ntvXqWvI8qXnhvmV756lIND7fzGr32Rk/u6+Qf/
      75v8s3//Lv/t//1DPrwx33Bvroph8yfvjvPznxvDsh1+uKVmp2k5vH3xDq8eH3zqjdqnhaYA
      PCFKhsWFm4t85fkRfJpCT3uU/+4vvcxwdwu/+meOcWQ4SSpfZrS3lX/679+t5cBu5qObC2SL
      Bt84PcrJ/d28d20OZ1M9zA9vzLOQKvDqsYEn+WjPNE0b4AkxOZchnS/z4oENH/W6N8bvU/mb
      f/aF2o6Hcys5/vSnE/yNn3++1tZ1BT+5eIcXD/TSEglw+lAf3zt3i6nFNYa7WsiXDP71f7rA
      118arcu2anJ3nnkBmB2/yPjMKmPPn6ErqlPKzHPu/HXaevcxGHf56PIEicH9dPmKnL9+h4Gx
      44x0f3LZahXTJluskC+ZlCpefL0sS7zx8RSHhhuHAoMXcYkkocjwzZf38U//3bt87YURRqr1
      L9cKFS5PLfP3/oJXr2mku4Xutgi/8ds/YbSnlbVChbZYgG+e2fdEU1KfdSSxU/neZ4QLF85z
      +NBeLl2e4ejRfUxeukBi7DCTly/h16B/9ABTV69TkVyOHT7A5UvXOXLkEEII8vk8iqLUkia2
      Dpz1r2bz5xNzGS+xo0HBmGLF4uylGQzTQpYlJLwygEJ4b/lf/+YJjlVXRBv1vf65EPDP//AD
      rk2nODTUTqFisZotIVyHf/jXvlDb6TCVLTGznONH528jBPyVrx2lLRq4a99bP3+Qtg/6+SfZ
      9/rnj9rHMz8DSLKMLKsgvJIYAmkj06e6/5ckierPCusD1xtoopYWKYTYtoGa4zjb9hCbXlzj
      +p3VhvciS/D1l0Y5NtJBQFfRFJlixcJxBbGQj6CuYtv2jn17KpCLJEn86teO8Adv36Ri2vQn
      g+zvT/DcnnY0hVofkYDKWH8Lh4Y24lts275n340+976njcHhuu59fyfPSt/Ats+f+Rng1qVz
      3F7KsufYS/itIn65xPuXJ2npHGYo7nD++jQtvaN0aTkuTy3SPXKEA4Nemb1cLuelBPob7U/T
      mPU39E5sLdfxKOz01mry+HjmBeBReBgBaPLZoukGbbKrqbMBMpnMrto13TAMFCnmfQoAACAA
      SURBVEVBVZ95U6jJQ9JUgZoq0K6mqQI12dU0BaDJrqYpAE12NU0BaLKraQpAk11NUwCa7Gqa
      AtBkV9MUgCa7mqYANNnVNAWgya6mKQBNdjVNAWiyq2kKQJNdTVMAmuxqmgLQZFfTFIAmu5qm
      ADTZ1ewoAHcmrnJ9YhrbrSaMCZfFmUlWcyXmpyfJlXdP6uRuRjgVKsv/CeGa9278DLJjMmwm
      VyTZ7uP8lVv0tQcJ+XWm5lcY0XQmZ1c50dlHqVhE0/3ICCzbRlMVKoZFIBjANk0s2yEQCGCZ
      ZVxUNEVgWC7BgB9JcpidWaGzsw3TtNB0/6PtTyUcrnz4HgtZg8MnXyIZ85Oem+D89WniPXtI
      +gpM3Fkh1N7PyYPbtwJt0hgr+yGl2/8nWvQIin/7FkPPOjsKgD8YobNvD/Opj8mkCliBIOnM
      GhFdJpXOMnPjYz64PEFr3z56tBJlvQ0pP83NmRSHTn2O3OQUkl+mv7+HW7eXSPb2snL9PWZT
      ZU79zC8ykhCsLGfILd0iZ8tosW6eGxt86AcRRh4n2ssre0PcWl0hGetjNVvi9OdfZfLKFdr3
      HibWssxsyqgVVXJdF8dxaoWmmmxFYKTeBFwc20R8Br+nHQXAtkzWVmawpRBQItrWxd79fvoT
      ISR/HqU0x4HnTtESCmDlsoztH+Xcj+c5dfplwlEdvW+EroRGLj1PJDnMQFeIxYkIZ145QcQn
      sV6hLRBNMNLfx9R86tGeRJJwHadWRQyA6kAXQiK/MkeqIrFnuK/aXKr9kz+jWwY9KsIpYWU/
      BkDCbPw9CYEQJpLsA569Al47CoAuWdxernD80CjlwhqBoJ9OtQ1VV+nt9hMOdHD10lVEZJDO
      3m4UWeHo0YPcmFqgpX0f3d0SAV3CF26F2ZvMLLkcOzLG5MIaiS7vsgNDPfg0CVXT6e64vx1S
      dkLSI4Ttm7x7cZ6jz73A4uICXR2tvH/2bdqHxpibHidTgWLZ5Pj+obrB3xSAxlj5CcAG2QfC
      bvg9VRb/kPLC7xMZ/R9Qw/uf/E0+Is2yKM2yKDtirL5B6c6/AOESHv37aNHDdcddM0X20q8j
      nDLhPX8PX+vnPqU7fXiaFaGa7Iiw80hqFFwD4Za3HXetDCAjqVFcu/jkb/Ax0FAARGWJG4s+
      WuV55ktxBiMOOb+CZsbo6gpTzqYw1CDCMmmJN96LamX6Ohdvr3LiuRNkVlIMD/V9og/S5PEj
      nCKyGsG1HBDbDWBh55EUP5ISRDiNBUAIgWuuIqsRJOXpm2kbKr+Svw0jO0e2JCHMDKvFAkHJ
      4fqFDzj7wWVMw6a0NscPfvBDrt6a4/aNC7x77mPKzkYf+ZJFojXM3OQkKDJl02l0qSZPMa5T
      9GYASUa429d9hFMASUFSI+AajTsRDsXJf4Kx8t1P+G4fjh2sPxXVLVF2daKKzVpFwudT6dtz
      iM6ATC6XxQm0cuTocfb2Rbl85SaV3AqZ4sZbYnDPHlrCEcI+g/mlVW7NLD2hR2ryuBB2DtnX
      iiQpDQe4a+WQlBCSGkXsKAAWrpXBtXfeBVO45qe20Laj+yMR1HCDYTpadCw5jKb4CIX8BIJB
      fD4dTdWopGe5MZMl2RFHDYRxi2lmZ2eZnZ2j7KioskSyfxgru4qMVT02Sya/XZ9s8vRRswEk
      BSG2z+DCNZBkP5ISuosKZCOsHDiVHY4Lirf/L0ozv8mn4Y/Z0QhO7juOt6d4kpeqC4CBAMDG
      5sydp17xfhjpBSCfWWYlYwISrhB0D3grrl/40muYxSyzS56v379pZ8MmTy/CKXpveNkP7vYB
      LOwskhpFkvWGRjIArolwCjvOEMJew0y9gRZ/8XHe+n3zWL1AkZYOIi0dDY/5QjGGh5ubNz8r
      CCFwrSyy1gJICLH9pSXsHLIWRVJCuGbjbaNcMw2IHWcIM/VjENbONsQnTHMFqEljXAOEjaQE
      QfY3fIO7dgFJCYOs7viGdy1v1m90XLgmxuoPkNQ4YtMMI4RLZfm7VeH5ZLm3ANgV3n3rDaaX
      140YwZ3xi/zOt7/Nux9eZMO5I1hdXqFeUyxz4ePxBvspNnnaEZsEQFIC0EDFEXauqgIF7yIA
      6Y3+tmAXbuAay+jtX64XADtLZf53MNfee0xPszONVSBh8tG775FzfIz2hplZzbMRByjRv/cI
      +woOz504wuzEZSbnVukeGOTKuffpPHCMHt1gcj7F2HMncNymvv8sItwKYl0AgK07AwrhINwK
      khpGklTYQcVxjar3b4sRLITATL2OGjmM4u/DymwMduGaCKeMU5p8nI/UkMYzQH4Bu20fx/sD
      FLUOjhx/joGOaMOmS2slzpw5STZV5OChQxw/MEIqk8Ypr3BrLvsYblEw/tFbfHTxOtcm5x9D
      f03uB+FWwLWR1Bgo/ro3NOAZt65RVYF0b9BuEhLXylKa/S2cyiyg4DqlLRewMdc+xNf2StXL
      tOFCF07FE4DynU/wCT0azwCRbvRr57hg65w8ESSdk1iZnWRuNQeSwtDofmIxz6Dtaotw9p2P
      6N93BGVtmgtXJ4n5/YRaksRDfh4lxN+jxPmr1wmHTSrCx9jwZy8m/anENaozQMh7w29ZCRau
      CU4ZWYshnLK3T7NbASUAQGXpO1Tmvw3IKIEBb9Fs8/lOEWFnUYMjOJXZehXIygAurrmEcCqf
      6ApyYwGQNI6+eKb2azAQwigH8UXaQJII6gp7RjwXZ/fQGN1DY17DZJzHH/AQ5MC+IX7y0wlO
      f/0XHnvvTRoj7CJIUtUI9iHs/JYGVm0dAGSEcKszQgDXTGGsfBct9jxW9n1kfw927kLd6U55
      GlmLeSqUHPCEqIprZ0DSEHYR10qjKJ/cS+++vUB6IEgsFiMWjaIpT9J5ZJLLWCQSIWbnmqvJ
      TwrhVpBk3Qsbr6o49ccthGsiaXEkWQdchPDCJezCNSRJJTj4X6JGjqCG91bP2ejDqcwhaa1I
      Snibke0aqyjBEYSwdnSvPi52HMlL0ze4NrVw3x2tZ1WlVh/3DWscOXWGL732EmY2f+/mTR4Z
      bw0g4+n3AJKyPRhOmCBMJCXk5QsgwPXaOMYisi+BorcT2fcPUcMHQZLqBaA8g+zrQJI1kGRA
      rl1D2GsoegeKv++udoAQAjPzLqWZ33zoZ22oAlmlLB9emeDwiZNk0ikMoaIYaxRdP72dMRbu
      zOH6AtjlMp0DA/icMm+9/Q4jB09QWL5NKr1G7+Ag5fQ8OVtnsKdjI0vrARCuzVpmlfM/Pcdq
      yWDk6OmHftAm94+dv0B55jfRO74O4KkoW4xg186DrCPJPiRFB+FCdYC7xhKyv6d6rl5VkyRP
      zVE9oXIqM6ihfV5nkuoZwq6BJGue8GktKEg4lbmdb9StUJ77N7hmikDvr3gxSw9IwxlA1nTa
      Em3EtBIfnJ9EM1eZWDIoL88wvTLLcspm9vYEfrnMnZUisuojGosRjwQxKgZ+yWJuaZrXv/9j
      zv7wDVLWw60EuE6Rcz9+h4xhoygKRrlxPEmTx4cQgsrif8TX9iqBnr8A4BnBW6JBhV1EVkKA
      hCT5AYEQFkK4uJV5lKoAAN5bHsmbNfBUIddYrLWRJBUktSZkrpVFVmPIegeuubJjjJCVv4xT
      nvbsEbvQsM29aCgAiuYnFosTDfrpG95LPBrCqRQoVCxURaWtPUlbooOejhYkJBRNR5MccsUK
      4XiCzvY2ZFmio2eI5089R0B+uFxRRYvx1V/4OfpaVPKZPBXrs5eU/bQhnAJ2cQIterya5wvI
      Wk2/r7Wz16qBchKSGgThePFAroVrZ5F9iY3GklqnArlmCuGUUAL91eNadS3BEwBhpZB8rSj+
      Hm8doVEuglOiPPtb+FpfAdlfW3B7UHaMBRoaHAJNYahHQtGiHDvgwxAa8WgA15Fw3QBoMkN+
      T4b2HzhMyZZJtgyhqQp94TaS4TglE/yP5AotcXsuQywcp5R6HOsKTe6GayyDW9kYnFANhrMR
      ro0ke0PGtbxAOJCrn4lqmwqulUbWNy2drs8A1bUCY/UHyGoUJTi03sDLOagKmWvnkNUYSKpn
      BAsH0Gr9CSEwVr6PsHMEev4ydv4SrpmC9f4egJ2T4nXd+786R4RjrbU4UM8JpNQd94eibPbW
      +gDfpnMeBiFsLCvA6Ve/wO1rH+Pv77n3SU0eCad8G0mLowR6Nz6s2W+bF7pSyFqcWiWIqitT
      OAWEU0TRkxvnyzogI1wDYecwlr5DaOhv1XR2Sda8WcYpeYtgdgFZa0FSwwgn73mkNq8FCAcz
      8y56+9dQ/F0gBxHWw1UVeapzgh07z3d/94/JorLnwDEODXd+2rf0mUIIgZ2/gLX2AYG+/xxJ
      krAL11ACW96kst9bqRU2629iYeU8F2hVOCTZWy12zVUkJQLyxoCVJA1JkhCugV24iqTFUaNH
      N18AqeoFcu1c1bAOeAa0EvaMai2+6ca9JBsl4K06KXoHjrF8z2dt5IjZ0Q360dnXeeuts6wW
      7h6mWs7n+aQ0c1Vr4We/9ct86XPPM3fhB/w/v//mJ3Sl3YlTukXh5j/CWPkeuBWEcHAqCzW/
      /TqSrIOw65JiXCePrG7M75Lq5QV77s22qtpTPaZseIGcygKyGvN8/+vImmcEO2WElfa8S0rQ
      +6fFcM2VuvsRromwMjU7Q9aTuMbijs/pmmnKs/+6YeL+jjNAqK2Ho8NtXLg8Az06mbJCyM2y
      WPYx3NNCIBSjks+Sz+ZoD+mMX7yA2jpAe0Am0t7C2koWTRS4cmuZY88/R1B9cEPYNlP80e/9
      gEhvPye//Iv0djXONWjycBirbyCpLQingGsXvLAG2/PAbEaSVMCt/vMQVtaLE6qi6N04lXmE
      lUYN7gFJq+sD2e+FV9jeeZtdlhteIMNzgUqa114OIGstOJX6GDDhVhBuBdnn1ZKSfUms7PsI
      4SJJ9e904VQo3v4/sNbew9d6BlmtF+4dBWB+8goLCy0MjB7g6q0pThzay5tvXEPTFML+I4ic
      gV0qIhXzmJQJJvdgLN/k2h2FY+1RZu7MEZKLaP4gjiPgIQRA0Vr5z/7CL933GoJRzJEuWHR0
      tKFIIByL5eVVIq3t+FVBNlckFo/zkE6pzxxOcRw1cgAr+0E1IUV4nhpZr28oa54hunkGsNbq
      1BJf68uU7vwLhGsQGvrb2/5m3mpyBddYQNa3vMgktZp3XMG18576owSQJAlF78EuXPfikqSq
      AW6mvEU6ybtPWU8i7Jz3DJtmFiEcSjP/0osqlbSGecc7qkDdwwd59QtfpL81RFdPHwHdTyQS
      ItreQ7Krm7WJ84QTnlEaCoWYvnGRxZxDa8jl3DvnWMqWCUcjpGYnWMk/nJK0Xr3tvnAMLl2+
      xvLcJNOLGQBmbl1jKZXi0pWbpJYWmJiYwGhGZwN46oixhBreB0ieC1O4VQN0ywwg6576UxUA
      4doIJ4+ktdTaqOExz48v3A3vzuY+VC9v2DXTyL56AZAk2TOCXQPhFKq2RdXJ0v5V7MJVjOU/
      rbV3zWVkLV5z08q+Nlx7e9qlnbuImX6b0Mjf9fKWH0QFGt3rTRVyIMxIfxgZ+NyrX8IVAkVR
      eP7zX0GSFUTrUSRJIvFyN0gysgx7HBdJlpEQtA/sQ1UeOST0ngizhD/Ry/5kkJvLeaAFw5HZ
      N3aQ21cvEevsp6PoheSuF8V1HAfLsnZlaUS3POPp0ppnSFpGFlfp8AxVR0GYG29L15HBtbFM
      AwkT4eQBCcdVN7WLoEROeIIlxXHMLbFDQsaxSjhmClVpwzS3vo01bGvdBohuHPcN4uv8ZSor
      P0COvwaShlVeBiWMZQtwTFzhRzhFLLOEJIK1Hs3sBeTgXoS+F5QgtpmFLdfdUQDWB4UkSbWS
      p7Ki1KYMqTqo13UuRd3oSlU3BtSTGluS6qOcmycftJDXp0HHpFDMUzBB2TSRrNcDVRQFTdPw
      +XxP5iafIszCErKi44+NUUFCkSxUVQG3jM8fQ9n0nTiuThmBqiooPh9OuYwk+9D0SF07dfDX
      AZC17d+nqYXBXgVhowUSaFu+84rqR5ZsHGcNRW+t/5v4E1huGU1VkBQflr2Korfj072/syu1
      UXINVEWqux/TXEL1d6JpGrIaQsbY9re+5/B0HRvTvD8VplLMsby8zPJqemNjDdgk7QKjYmxL
      kXTMEsuPusilBRlJBhhfKDLU28Hi4gLDo6NMXb1K7549LE5eYWpukUtXbz7adT4DCCGwS7eR
      /X1IslZVDwrglL1VW3mLASv56lQg1855q7dyfZy+rLVUk+gboARwK4sgLGRteyFkuVpaRZgp
      ZLU++coru1JmfR3CNVeQtdZNDVQvKWdTVpoQAsdYQNa7qn0E60Kua9dtfLcbVPJpJu/s7GLa
      jFEucP6n77G4lsXZJACTk+upbQ7Xr9xgqxq+MD2FGgjd1zV2RqK1e5gXTxzEp0h0dnah6BFO
      njpFMhakZ+Qgr776Ki8cHn3E6zz72PlLGEvfQW//MuDp565T8HR4SWN9kXMdzw3qILCxizcx
      0z+p+ervFzW0F7s4jnDNep9+7SIqOGWEU9pmJK8LwHplCtdcrbMjJElBVsO49qaXqFtG2Lna
      gtxOtYt2UIFs3nvj+8yWdb74wkHA4aOzb5Kt2PTtPcLM9XPYto+jp05w7cIlyqbF6c9/hVii
      m76eJQb2DFGYucF3P7jMwOHT2KtzvPXmLO1DXnXh5akrvH9pgs7hw7xwaJiVosmx4FO9JvdM
      4lQWAAnFX7+AWJ77t+jtX61Vc15/+7pOwav1Kdf/LSTZ7y2CCYfy/O9iZc6ihEbrFrvuhd72
      KpXFPwDXbJjhJck6rp3zIkK3umHVsJdtJhyEa3ur0JuFRJK9N/ympB3XylWFyXv2BxMAM4up
      JdBzyxRtB6hgKwlOn4hw4U6J/tFDJKgwly4wdOA45cUbuFv0mpVMnsG+JCsraXrbujk2mOTy
      xAoysDg3T3vvINHguj4mnsGtFZ5+ilP/GwiXyNj/UvOqCNfEKU/j7/z5jVAEJQR2EWEXvLe9
      tGVYyNV1AOFiF67i7/qzaLGTDxTiLilBgv2/jlOaatxA8SPK04hqmmX9yaqXleYUvLAMIbx6
      pBs36IVDbPLyCCfv9aV7ofiSEkJYa9tWhBurQFqMeMCha3CYaDhCorWL/k6VD8fTjO3ppCUe
      R48n6O5oYfL8O9yYybCeJJbo6kQDOjvaqLg6I/1JgrLJufOTjO4dprMryb4jx6CUQ/V5ftyY
      rpG3mv7Jx4lrrmIXrlf/3ah9LuwcINVFa0pqGNcpIpxSNQuswXuxGpgmnCK+ti+i1YUy3B++
      +En8XX+u4TFJ0nDtvHcPanzLMdULtXCKCGsNAFnZFGUmKdUq1hvxQF5IRhC5Kijr6xBb2SEn
      WOXwyZfqP2uN0jm4/os3hWlmia7ePoZauglXX+bt3Z7REe8c4lTnuj84wUD1p3C3p5O99HJ7
      reu+gT6W01kiyR0MqCYPjJl5FyXQh+xrx1x9HS1yAADHWPEGzCYjUlLjuMXxDRugUWKJpGIX
      riKr8fpQ5wdkp1lDknUvnEE4DWcAqWrkCtfyVJ5NbaR1FWiTketUFpD1jTHmqUAFPEPauwch
      nEcLhlN8QfYdOHzvhvdAC8bpCd67XZP7QwiBlf0QNXwQJTiEsfzHtanfNZc8z88mFUJSvNqe
      Xr3/BioQEoq/F2P1DZRAr6cyPWYkNQLCRm//Ckhb3Kiy4nl57BJQAqRt9+BFjhZrz+8aCyib
      Q7LV8DYvkHBKO3uBHKvC8mrmgau6CSGYn72DtdUoaPLkEBausYwa3ofsa/MGxnq2lbmKrLVu
      CVaLeItidg5JDmyLp5EkmUD3LyPsLEpgaNvxx4EWf5FA318jOPDXt4dRSCqS7EM4JVx7zasm
      scVVK6vxmnoEAqcyixLc2A5XUgLbBcDK7CwA2ZU7XLx6C8sROLZFuVLBdhws08RxHCqVMpbj
      4toW5XIF13Uxqp/5FZel1M714Jt8sngVG7yiVbIaR7gWbrUuj1uZRw7UF6/xvEAlXGttx7e7
      1nKK0ODfxF/NE37cKHoHga4/V60wsQVJ88qt2DmEtbbNRvCaRDfcoMLCKd5EDW0Evm3kNXsv
      ZiEcjJXv76wCLa6UGe0Kki4WWbh2AVsLEdIF6TWb9hadlUwRSQ0SEqvM5n2cOd7H9374EUdP
      nWF/MsLCQpne9mY16E+F9WhJLe7pysIGp+SFOxsLaJEjdc0lrboPmFPctghVayMp6O1ffRJ3
      3+Da6zp+0Xtrb9Lta23kDRtgvZSKvMn9K2txhLWxTmCuvo6x+sPGM4Bwi0xNTjJ15za3bs7i
      ahEOju3Frwc5duI4qrAY2X+QgGTSObif7pBExvBx/Ohe0itLn8pGB0028ILKKkhqDFlr8ZLQ
      rZyXkmitIW/O1mI9mcWq2gCPX79/LMh6NVp0bVu4NoDsa0VYaW+Vu3gTSWurbydrrKdtuuYK
      5bl/S6D7WzvMAJbLS1/5Bq0hjVQ6hc+tcO36BAPDg/h9CoOj+7ly+TqdI2PoVgo3EKOzNcr4
      wiz9A/tIp1O0xLZLaZMng1eq0KhFTEpqGGFnq/m6ayj++kprktaCcEue6zB24lO667sjqzFc
      M4VrZtAiDVyw66qTU8YpTqAEB+pXqiUFJAW7eJ3y3LeR/d3oHV9rLACSHqG12l9bqxe38Vxi
      Uz6uEuLIieeqv4Q5WZ1pjp18ASEEy0slki2Pkg382WV9dnyYOkn3fQ07jyQHat4cWWvDtdII
      u+ipOVtmAFmNeG2Mxe25AE8JkhLCqcx4nhvf9lgiSfaDpOA6eazCVbTo8W3HJdlPcfKfIQf6
      CA/9bSRZf/wbZEiSRLKzC6WZddIQp3iTyuJ/aLjr4uPCdfJe+EBVyGQtjmut4RhLSGpkm6Ep
      KQG0+AuAqNb6efqQlADCynoZZZsD4arIvlaQNIzVH+JW5vG1nqk/X1K8jTycIqGBv+61p7lD
      zBPFK+fxXcoz/4ry3G9/ctexctWSJVUB8HXgGku4xry3iLU1XRHwxV/0FpyeWgEI4RiLCNdo
      uBAnay34Wl+hMv9tlOAw6iYXqNeBhiRpqOGxWnwQNAXgiWMXruNr/yrGyvdw7pLI/Si4VqZq
      AG6eATI4lXkUvbPBQpeX0aV3fKNhNtfTgLdjfQUtdryhCgQQ7P1L+FrOEOj+5e3nKyHU6DH8
      3b9Ul4/cFIAniHAKOMYC/o6fASTs3KW6465duKdQCNfEXHv/rvvqCiuN5NtQE2RfG8LO4xqL
      yL72hvaHpPgJDfz6NgP5aUGq1hbytZzZsQaopAQJjfxdtOiR7cdkldDQf+UV6t1EUwCeIHbh
      RjWWphMtdhJj9fvkrv4dynO/gxAO5ZnfJHf17+DWVjQb9FGcoDD+DzBW39ixjWvnkZVIbaDL
      eieusYhTulU3/T9LqOG96Mlv4Gu5e4HkuxXIlSR5m/A3BeAJ4pQmvfBcNYSv9Qx2/jJC2FSW
      v0tl4fexC1cQ9hrG8p/s3Ef5DiCoLPz7hhlOQG3/3nXU0Ciy3uWFQTyjAiBrLYQG/voDJeHc
      V7+Ptbcmd8UujqOG9iJJClrkCIHev0Jk3z8i0PMtynO/g2OuEuj5FYzVNxA77KzulKdRY8+B
      EFi5iw3brO/fu46kBAl0/5JX8nBrSZJdTlMAnhDCNXErs7U4HEkNEej+ZWQ1gq/180iyD8XX
      jq/lNK65vOPOKE5pEi18ANnXhlNuvIuiV7i2Pl5GazlFdP8/rit62+Qprw36WUI4RVy7WBei
      u46shgj0/VVvsUaLIfsSOOXp+gK1gHAMr65+4Ju4VhqnPLOtL6cyB8LavtorKc3B34DmDPCE
      cK0MwsnvOAj9HT+DnvgikhJC1juxC1cb9JFCCAvZ34sa2otTre2zGWP1DZTgEPJT6s152mgK
      wBPCNZaR5MD2bKctSJKMGhrdVg8TvG2FABQ96Rm1VrpuZxThlDHTb+NrefmhtgvajTQF4Anh
      lKfrtg26G0pwGKc8VSsDAtUsr7X30SJHkRS/t/eunfNq9FSPm+m3EE4BX9vnP5Fn+CzymRIA
      xzIolsqsR2ML4VAsFLEcF+HaFAvFunpFnwTi/2/vzHrbuK44/iOH69BcRFGLRcV2lEb0Ijd2
      FzRA2gAFAhR570P73I/QL+A+9Bv0C/S1CwoEaGt0idvkIastW7I2a6OohZtIDsnhcPbbB9qJ
      GEupFCWxlvk9DmcuzlzOufv5H+E+zXT+NNmDcHsiTd0CknzlUGUE5FcRjo6jrX5+0e1iNe8T
      TPfWwX1SFH94FC3/O7rFP2Gr82ibvydy8efPyYp4HMzZmQS7Jo/uf0rXchnPvcbl4QTFtQXy
      5TaSPMhQSKXc7BJOvcT3rn39k0EhXGx1EaP8Tq/1dnTwh5AiWfyhDFbrIdGxXx6qLCmaJRC/
      gV76C7GJXyMsBas5jXC6BONTvZt8AeSXfoXVvI9RvYte/COh9JtEht7+Rk+anjV84oxErwi9
      wdxWh9yozHJF5frEJZYXZrk0OcX63AyaT+L2zRvMzswwNXUTx3FQVbVPJ0aSpL6P51nu48Ae
      3VO38Xdo/YcvBksL4SBsBdOXRUr9pBeBZKsY6jo+p0EgfoNw+s3PNnL2K1sIgeM4PR0bcw2n
      8Fv84QzCVhHCxYr+FHn8Fzw74+M4DkK4+Onl7O3l1fL/37KlPWLFruviuu5neqnP6JUtDlUn
      p7nsM9MD+KQghqbS1UCSnqbxcWy6uoZu+/H5DHS9g+0G+8RxQ6EQkcjhFc5s6Uc4kfjzP/iD
      BGK5z9L2HBchbmNHf4Orb+MPjyHFXsEvedIZXzdnpgcAQSm/xFqly61b36VVrzBwIcT0o0Wy
      kzcZDHR4MLfO5M3bDCd7rXCr1TqyA3icLc6QAxwdzwE8+oZA59EXhBDn8r09evT1AIqiYFnf
      XKjeaefZpOuk4NlzfBvO9RDoqFiWRTD4fDjhi+Kk2WPb9nOrL982R62TQg19ogAABU5JREFU
      k9N8nAKkbyHX2VE4afa86NYfjl4nXg/gca558S57AjC0Njs7RTr6l89/9E6bjt5/+tLUO5RK
      ZQzLxdI7lCq1r+W4hXBdzC+Zjwkh6LSaGLbTd93Q2hTLFSzHxdQ7tLX9A2uOZIsQ1KsldnZK
      mHvezTAM9jafjmXQbPVnYRGuzW65hKJ2Ea5Ds6HQb/GhLKClKL28c65FXTlYd9Z1bBpKf745
      IQTNWoVqvYUQLmpTwXR6hnsOAOxur1Cqt5mdfoBqHpSowyC/tMJGsbrnmkNxcwulXmZxrcDc
      zEMqm8ss7xwc03tYLE1jq3RwgLxrtnky+4RSa+/HYLO1sYVS3mR5a5ft9QWWN8rHtgUhWFle
      pNPR+jIBFfLre/K9uRS3t1hYWel7VK2VKTeazMzOoypVnjyc4+iyyQ4LH73PRqNLu5jnHx88
      OPBOpVpk+vFS/0VDYb1YY21mlmpHIT/7iB2t54bSnTt37hzZnjOGpjbJvJQjEdTR2m3ee/ce
      M+sV4rS4P7NIKDlMIhollZBpGxbp5LOdYB+JZAK11SKVSWLoAaZeu0xxo8nIyD6J4I6AY5q0
      dJ2N2Q/578eLDI0m+fDe+ywtFRibnCAcCBMPSZiBAInoszhZH6lUnGZTJTM8THYkTbNtkUnv
      L3h7aIRgef4hHSNAPGbxr7v3KDQMwlaNJ8urNO0wo4NJEqk0akshk/lctyckxwk4XURIJpvN
      EjQ0pEyGo0X2umimTaelYZgGUkAiFTS5e/ef7JphWsUlVgpVhkZGiCdTGJraZwNShGTER9vx
      cTk7TlKy0CIDpML+s3MU4vi47FZrpBMh7Pg4kyNxlLbKD994g+iBKneCwtoqybEJ0hcCbK8W
      0OpBhHw8eUHXdTG6TUzbQBcpRiN1mqbNxPXbxHQFE9hfvspldXmVkYkciUgArPa+d30Vxl6+
      Ti6XY3PuAxLZVxhNJ8AN8/rUCHOr9QOf69S2qJkRchPH1Ir1R4maddTAIJGghaI0uTQxQbFR
      Z2A4weu3bnDg32Q1Wd1ucf3aJNIXVqi8HgCwui1mZucZvnKN7PglXGWTLlGuvjrO3PRDwqlR
      LgQMPvlkmlptF+GD4q7K0ECMnUKe/MYGXWQuZ8I8zje4cfVlgtJXH12qtW3m8zWu5nJYahli
      GbJjw8jhMNFomJAs4+vs8tHMPI1qFcc2aZsBUrKfzfV1NgobOEGZjYVZqvUavugAqQvH2+32
      +X3IUZlYYgCltIlfTjMQMplfLZO7liMShOWZaXYqNTTXz2a+wNjFEdr1Citr6+xUWsh+jbn8
      Fo1ai+HhUQJHqCKfz096IE4oliYZC5OKx9ipKFy6cpnMQIKY3DsnVcovsL5ZZLdpUNkuMDh2
      EbQmiytrbG/uEI0Feby4RqNWY3Bo1FsF+irYhoYjRQkHTsaxY6PbQYrEOCHmgGPQsSRikRc5
      wHDROgZy7MsHW54DeJxrvFUgj3ON5wAe5xrPATzONZ4DeJx6hBCU1h/zzjt/pdLeRzVbCEzD
      eLqJ57AwP48rYHl+znMAj9OPre/yt3uzvPWzt7gg2awtPmZ1q0KlWMQSNuXyLo8//ZSubTD/
      6AHvvvchjgtuecnbCPM4/VhGneiFcaLhMOXFj5jddHDqD4n5BclrP2B7WyFQyqN3Kugjk4SD
      vXb/O9+/5fUAHqefsJyF7gof37/PbtvC1FRMB6Z+/Ab//sOfmbx6FeilTOu025h27wSTlHjZ
      2wfwOBvoHYVipclodoxWtYiIJBlJJ6iWiwwMXaTbaiLHI2xvlQjJcUaHBvH5vI0wj3OONwTy
      ONf8D5LofH/pWLqbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccination Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Week Rate' width='192'>
      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
      jsGouDTefAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
